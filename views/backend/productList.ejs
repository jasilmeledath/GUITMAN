<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('./partials/meta') %>
  <!-- Favicon -->
  <link rel="shortcut icon" type="image/x-icon" href="/backend/imgs/theme/favicon.svg">
  <!-- Template CSS -->
  <link href="/backend/css/main.css" rel="stylesheet" type="text/css" />
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    
    /* Custom toggle switch styling for smooth animation */
    .toggle-checkbox {
      top: 2px;
      left: 2px;
      transition: transform 0.2s ease-in-out;
    }
    .toggle-checkbox:checked {
      transform: translateX(16px);
    }
    .toggle-label {
      transition: background-color 0.2s ease-in-out;
    }
    /* Change background color to red when toggled on (checked) */
    .toggle-checkbox:checked + .toggle-label {
      background-color: #ef4444; /* Tailwind red-500 */
    }
    
    /* Alert animations */
    .alert-animate-in {
      animation: slideIn 0.3s ease-out forwards;
    }
    .alert-animate-out {
      animation: slideOut 0.3s ease-in forwards;
    }
    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    @keyframes slideOut {
      from { transform: translateX(0); opacity: 1; }
      to { transform: translateX(100%); opacity: 0; }
    }
    
    /* Product card hover effect */
    .product-card {
      transition: all 0.2s ease-in-out;
    }
    .product-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    
    /* Enhanced pagination styling */
    .pagination-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 2rem;
      flex-wrap: wrap;
      gap: 1rem;
    }
    
    .pagination-info {
      color: #6b7280;
      font-size: 0.875rem;
    }
    
    .pagination-controls {
      display: flex;
      align-items: center;
    }
    
    .pagination-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 2.5rem;
      height: 2.5rem;
      padding: 0 0.5rem;
      margin: 0 0.125rem;
      border: 1px solid #e5e7eb;
      background-color: #ffffff;
      color: #4b5563;
      font-size: 0.875rem;
      font-weight: 500;
      border-radius: 0.375rem;
      transition: all 0.2s;
    }
    
    .pagination-button:hover:not(:disabled) {
      background-color: #f3f4f6;
      color: #1f2937;
    }
    
    .pagination-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    
    .pagination-button.active {
      background-color: #3b82f6;
      color: white;
      border-color: #3b82f6;
    }
    
    .pagination-ellipsis {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 2.5rem;
      height: 2.5rem;
      color: #6b7280;
    }
    
    .pagination-per-page {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .pagination-per-page select {
      padding: 0.25rem 0.5rem;
      border-radius: 0.375rem;
      border: 1px solid #e5e7eb;
      background-color: #ffffff;
      font-size: 0.875rem;
    }
    
    /* Fix for screen overlay interfering with clicks */
    .screen-overlay {
      pointer-events: none;
    }
    
    @media (max-width: 640px) {
      .pagination-container {
        flex-direction: column;
        align-items: center;
      }
      
      .pagination-info {
        order: 3;
        margin-top: 0.5rem;
      }
      
      .pagination-per-page {
        order: 2;
        margin-top: 0.5rem;
      }
      
      .pagination-controls {
        order: 1;
      }
      
      .pagination-button {
        min-width: 2rem;
        height: 2rem;
        padding: 0 0.25rem;
      }
    }
  </style>
</head>
<body class="bg-gray-50">
  <!-- Alert Container -->
  <div id="alert-container" class="fixed top-4 right-4 z-50 w-80"></div>

  <div class="screen-overlay"></div>
  <%- include('./partials/leftNav') %>
  <main class="main-wrap">
    <%- include('./partials/header') %>
    <section class="content-main p-6">
      <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
        <div>
          <h2 class="text-2xl font-bold text-gray-800">Products List</h2>
          <p class="text-gray-500 mt-1">Manage your product inventory</p>
        </div>
        <a href="/admin/dashboard/product/add-product" class="mt-4 md:mt-0 bg-blue-600 hover:bg-blue-700 text-white py-2.5 px-5 rounded-lg font-medium transition-colors duration-200 flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
          </svg>
          Add Product
        </a>
      </div>
      
      <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
        <!-- Begin Filter/Search Form -->
        <header class="p-6 border-b border-gray-100 bg-gray-50">
          <form class="grid grid-cols-1 md:grid-cols-12 gap-4 items-center" method="GET" action="">
            <!-- Preserve pagination parameters when filtering -->
            <input type="hidden" name="page" value="1">
            <% if (typeof limit !== 'undefined') { %>
              <input type="hidden" name="limit" value="<%= limit %>">
            <% } %>
            <% if (typeof sortBy !== 'undefined') { %>
              <input type="hidden" name="sortBy" value="<%= sortBy %>">
            <% } %>
            <% if (typeof order !== 'undefined') { %>
              <input type="hidden" name="order" value="<%= order %>">
            <% } %>
            
            <div class="md:col-span-1 flex items-center">
              <input class="form-check-input w-5 h-5 text-blue-600 rounded border-gray-300 focus:ring-blue-500" type="checkbox" value="" />
            </div>
            <div class="md:col-span-3">
              <label class="block text-xs font-medium text-gray-500 mb-1">Category</label>
              <select class="w-full p-2.5 border border-gray-300 rounded-lg text-gray-700 focus:ring-blue-500 focus:border-blue-500" name="category">
                <option value="">All categories</option>
                <% categories.forEach(cat => { %>
                  <option value="<%= cat._id %>" <%= (typeof category !== 'undefined' && category == cat._id) ? 'selected' : '' %>><%= cat.name %></option>
                <% }); %>
              </select>
            </div>
            <div class="md:col-span-5">
              <label class="block text-xs font-medium text-gray-500 mb-1">Search</label>
              <div class="relative">
                <input type="text" class="w-full pl-10 p-2.5 border border-gray-300 rounded-lg text-gray-700 focus:ring-blue-500 focus:border-blue-500" 
                       name="search" 
                       value="<%= typeof search !== 'undefined' ? search : '' %>" />
                <button type="submit" class="absolute right-0 top-0 h-full px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-r-lg transition-colors duration-200">
                  Search
                </button>
              </div>
            </div>
            <div class="md:col-span-3">
              <label class="block text-xs font-medium text-gray-500 mb-1">Status</label>
              <select class="w-full p-2.5 border border-gray-300 rounded-lg text-gray-700 focus:ring-blue-500 focus:border-blue-500" name="status">
                <option value="">All status</option>
                <option value="active" <%= (typeof status !== 'undefined' && status==='active') ? 'selected' : '' %>>Active</option>
                <option value="inactive" <%= (typeof status !== 'undefined' && status==='inactive') ? 'selected' : '' %>>Inactive</option>
                <option value="all" <%= (typeof status !== 'undefined' && status==='all') ? 'selected' : '' %>>Show all</option>
              </select>
            </div>
          </form>
        </header>
        <!-- End Filter/Search Form -->
        
        <!-- Product List Table -->
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Product
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Price
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Stock
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Status
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden md:table-cell">
                  Date Added
                </th>
                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% products.forEach(product => { %>
                <tr class="product-card">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-16 w-16 rounded-md overflow-hidden border border-gray-200">
                        <img src="/<%= product.images[0] %>" class="h-full w-full object-cover" alt="<%= product.product_name %>" />
                      </div>
                      <div class="ml-4">
                        <a href="/admin/dashboard/product/product-details/<%= product._id %>" class="text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors duration-200">
                          <%= product.product_name %>
                        </a>
                        <div class="text-xs text-gray-500 mt-1">
                          <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                            <%= product.category?.name || "No category" %>
                          </span>
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm font-medium text-gray-900">Rs.<%= product.price.toLocaleString() %></div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">
                      <% if (product.stock > 10) { %>
                        <span class="inline-flex items-center">
                          <span class="w-2 h-2 rounded-full bg-green-500 mr-2"></span>
                          <%= product.stock %> in stock
                        </span>
                      <% } else if (product.stock > 0) { %>
                        <span class="inline-flex items-center">
                          <span class="w-2 h-2 rounded-full bg-yellow-500 mr-2"></span>
                          <%= product.stock %> in stock
                        </span>
                      <% } else { %>
                        <span class="inline-flex items-center">
                          <span class="w-2 h-2 rounded-full bg-red-500 mr-2"></span>
                          Out of stock
                        </span>
                      <% } %>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span id="status-<%= product._id %>" 
                          class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium <%= product.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                      <%= product.isActive ? 'Active' : 'Inactive' %>
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap hidden md:table-cell">
                    <div class="text-sm text-gray-500">
                      <%= new Date(product.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <div class="flex items-center justify-end space-x-3">
                      <a href="/admin/dashboard/product/edit-product/<%= product._id %>" 
                         class="text-gray-500 hover:text-blue-600 transition-colors duration-200">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                        </svg>
                      </a>
                      <div class="relative inline-block w-10 align-middle select-none">
                        <input type="checkbox" name="toggle" id="toggle-<%= product._id %>" 
                               class="toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer toggle-active"
                               data-id="<%= product._id %>" <%= product.isActive ? "" : "checked" %>>
                        <label for="toggle-<%= product._id %>" 
                               class="toggle-label block overflow-hidden h-6 rounded-full bg-green-300 cursor-pointer"></label>
                      </div>
                    </div>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
        
        <!-- Empty state if no products -->
        <% if (products.length === 0) { %>
          <div class="flex flex-col items-center justify-center py-12">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
            </svg>
            <h3 class="mt-4 text-lg font-medium text-gray-900">No products found</h3>
            <p class="mt-1 text-sm text-gray-500">Try adjusting your search or filter to find what you're looking for.</p>
            <a href="/admin/dashboard/product/add-product" class="mt-6 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
              <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              Add Product
            </a>
          </div>
        <% } %>
      </div>
      
      <!-- Enhanced Pagination -->
      <% if (totalPages > 0) { %>
        <!-- Enhanced Pagination Controls -->
<div class="pagination-container">
  <!-- Pagination Information -->
  <div class="pagination-info">
    <% 
      const startItem = (currentPage - 1) * limit + 1;
      const endItem = Math.min(currentPage * limit, totalProducts);
    %>
    Showing <%= startItem %> to <%= endItem %> of <%= totalProducts %> products
  </div>
  
  <!-- Pagination Controls -->
  <div class="pagination-controls">
    <% 
      // Build the query string for pagination links
      function buildQueryString(page) {
        let queryParams = [];
        queryParams.push(`page=${page}`);
        if (typeof limit !== 'undefined') {
          queryParams.push(`limit=${limit}`);
        }
        if (typeof search !== 'undefined' && search) {
          queryParams.push(`search=${encodeURIComponent(search)}`);
        }
        if (typeof category !== 'undefined' && category) {
          queryParams.push(`category=${encodeURIComponent(category)}`);
        }
        if (typeof status !== 'undefined' && status) {
          queryParams.push(`status=${encodeURIComponent(status)}`);
        }
        if (typeof sortBy !== 'undefined' && sortBy) {
          queryParams.push(`sortBy=${encodeURIComponent(sortBy)}`);
        }
        if (typeof order !== 'undefined' && order) {
          queryParams.push(`order=${encodeURIComponent(order)}`);
        }
        return '?' + queryParams.join('&');
      }

      // Determine range to display
      let startPage = Math.max(1, currentPage - 2);
      let endPage = Math.min(totalPages, startPage + 4);
      if (endPage - startPage < 4 && totalPages > 5) {
        startPage = Math.max(1, endPage - 4);
      }
      
      const showFirstPage = startPage > 1;
      const showLastPage = endPage < totalPages;
      const showFirstEllipsis = startPage > 2;
      const showLastEllipsis = endPage < totalPages - 1;
    %>

    <!-- First Page Button (if needed) -->
    <% if (showFirstPage) { %>
      <a href="<%= buildQueryString(1) %>" class="pagination-button" aria-label="Go to first page">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19l-7-7 7-7m8 14l-7-7 7-7" />
        </svg>
      </a>
    <% } %>

    <!-- Previous Page Button -->
    <% if (currentPage > 1) { %>
      <a href="<%= buildQueryString(currentPage - 1) %>" class="pagination-button" aria-label="Go to previous page">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </a>
    <% } else { %>
      <span class="pagination-button" aria-label="Go to previous page" style="cursor: not-allowed;">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </span>
    <% } %>
    
    <!-- First Page Number and Ellipsis (if needed) -->
    <% if (showFirstPage && showFirstEllipsis) { %>
      <a href="<%= buildQueryString(1) %>" class="pagination-button">1</a>
      <span class="pagination-ellipsis">...</span>
    <% } %>
    
    <!-- Page Number Links -->
    <% for(let i = startPage; i <= endPage; i++) { %>
      <% if (currentPage === i) { %>
        <span class="pagination-button active" aria-current="page"><%= i %></span>
      <% } else { %>
        <a href="<%= buildQueryString(i) %>" class="pagination-button" aria-label="Page <%= i %>"><%= i %></a>
      <% } %>
    <% } %>
    
    <!-- Last Page Number and Ellipsis (if needed) -->
    <% if (showLastPage && showLastEllipsis) { %>
      <span class="pagination-ellipsis">...</span>
      <a href="<%= buildQueryString(totalPages) %>" class="pagination-button"><%= totalPages %></a>
    <% } %>
    
    <!-- Next Page Button -->
    <% if (currentPage < totalPages) { %>
      <a href="<%= buildQueryString(currentPage + 1) %>" class="pagination-button" aria-label="Go to next page">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    <% } else { %>
      <span class="pagination-button" aria-label="Go to next page" style="cursor: not-allowed;">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </span>
    <% } %>
    
    <!-- Last Page Button (if needed) -->
    <% if (showLastPage) { %>
      <a href="<%= buildQueryString(totalPages) %>" class="pagination-button" aria-label="Go to last page">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
        </svg>
      </a>
    <% } %>
  </div>
  
  <!-- Items Per Page Selector -->
  <div class="pagination-per-page">
    <label for="limit-select" class="text-sm text-gray-500">Items per page:</label>
    <select id="limit-select" class="form-select" onchange="changeItemsPerPage(this.value)">
      <option value="5" <%= limit == 5 ? 'selected' : '' %>>5</option>
      <option value="10" <%= limit == 10 ? 'selected' : '' %>>10</option>
      <option value="25" <%= limit == 25 ? 'selected' : '' %>>25</option>
      <option value="50" <%= limit == 50 ? 'selected' : '' %>>50</option>
    </select>
  </div>
</div>

      <% } %>
    </section>
    
  </main>

  <script>
    // Alert function implementation
    function showAlert(message, type = 'success') {
      const alertContainer = document.getElementById('alert-container');
      
      // Create alert element
      const alertElement = document.createElement('div');
      alertElement.className = `mb-4 p-4 rounded-lg shadow-md alert-animate-in ${
        type === 'success' 
          ? 'bg-green-100 border-l-4 border-green-500 text-green-700' 
          : 'bg-red-100 border-l-4 border-red-500 text-red-700'
      }`;
      
      // Create alert content
      alertElement.innerHTML = `
        <div class="flex justify-between items-center">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
              ${type === 'success' 
                ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd">'
                : '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd">'
              }
            </svg>
            <span>${message}</span>
          </div>
          <button class="text-current hover:text-gray-700" onclick="this.parentElement.parentElement.remove()">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      `;
      
      // Add alert to container
      alertContainer.appendChild(alertElement);
      
      // Remove alert after 3 seconds
      setTimeout(() => {
        alertElement.classList.remove('alert-animate-in');
        alertElement.classList.add('alert-animate-out');
        setTimeout(() => alertElement.remove(), 300);
      }, 3000);
    }

    // Toggle Active/Inactive Switch Logic
    document.querySelectorAll('.toggle-active').forEach((toggle) => {
      toggle.addEventListener('change', async function () {
        const productId = this.getAttribute('data-id');
        const newStatus = this.checked ? false : true;
        try {
          const response = await fetch(`/admin/dashboard/product/product-toggle-active/${productId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ isActive: newStatus })
          });
          
          if (!response.ok) {
            const errorData = await response.json();
            showAlert(errorData.message || 'Failed to update product status', 'error');
            this.checked = !this.checked;
            return;
          }
          
          showAlert('Product status updated successfully!', 'success');
          const statusSpan = document.getElementById(`status-${productId}`);
          if (newStatus) {
            statusSpan.textContent = 'Active';
            statusSpan.className = 'inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800';
          } else {
            statusSpan.textContent = 'Inactive';
            statusSpan.className = 'inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800';
          }
        } catch (error) {
          console.error('Error updating status:', error);
          showAlert('Error updating product status', 'error');
          this.checked = !this.checked;
        }
      });
    });

    // Function to change items per page
    function changeItemsPerPage(limit) {
      // Get current URL and parameters
      const url = new URL(window.location.href);
      const params = new URLSearchParams(url.search);
      
      // Update limit parameter and reset to page 1
      params.set('limit', limit);
      params.set('page', 1);
      
      // Redirect to new URL with updated parameters
      window.location.href = `${url.pathname}?${params.toString()}`;
    }

    // Menu toggle functionality
    document.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('.menu-item.has-submenu > a').forEach(item => {
        item.addEventListener('click', function (e) {
          e.preventDefault();
          this.parentElement.classList.toggle('active');
          this.nextElementSibling.classList.toggle('show');
        });
      });

      document.querySelector('.btn-aside-minimize')?.addEventListener('click', function () {
        document.getElementById('offcanvas_aside').classList.toggle('collapsed');
      });
    });
  </script>
  <%- include('./partials/footer') %>
</body>
</html>
