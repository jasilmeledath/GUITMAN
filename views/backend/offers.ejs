<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/meta') %>
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/backend/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/backend/css/main.css" rel="stylesheet" type="text/css" />
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        .form-control:focus {
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            border-color: #86b7fe;
        }
        .card {
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transition: all 0.3s ease;
        }
        .btn-primary {
            background-color: #3b82f6;
            border-color: #3b82f6;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            background-color: #2563eb;
            border-color: #2563eb;
        }
        .btn-outline-primary {
            color: #3b82f6;
            border-color: #3b82f6;
        }
        .btn-outline-primary:hover {
            background-color: #3b82f6;
            color: white;
        }
        .btn-outline-danger {
            color: #ef4444;
            border-color: #ef4444;
        }
        .btn-outline-danger:hover {
            background-color: #ef4444;
            color: white;
        }
        .badge {
            font-size: 0.75rem;
            padding: 0.35em 0.65em;
            font-weight: 600;
            border-radius: 0.375rem;
        }
        .badge-success {
            background-color: #10b981;
            color: white;
        }
        .badge-danger {
            background-color: #ef4444;
            color: white;
        }
        .table-hover tbody tr:hover {
            background-color: rgba(59, 130, 246, 0.05);
        }
        .modal-content {
            border-radius: 0.75rem;
            border: none;
        }
        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }
        select.form-control option {
            padding: 10px;
        }
        select.form-control[multiple] {
            height: auto;
            min-height: 100px;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div id="notification" class="fixed top-4 right-4 z-50 hidden px-6 py-4 rounded-lg shadow-lg text-white font-medium"></div>
    <div class="screen-overlay"></div>
    <%- include('./partials/leftNav') %>
    <main class="main-wrap">
        <%- include('./partials/header') %>
        <section class="content-main p-4">
            <div class="content-header mb-6">
                <div>
                    <h2 class="content-title card-title text-2xl font-bold text-gray-800">Offers Management</h2>
                    <p class="text-gray-600 mt-1">Manage and monitor your promotional offers</p>
                </div>
                <div class="search-container">
                    <div class="relative">
                        <input type="text" placeholder="Search Offers" class="form-control bg-white pr-10 pl-4 py-2 rounded-lg border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50" />
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 absolute right-3 top-3 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                </div>
            </div>
            
            <!-- Offers Table Section -->
            <div class="card bg-white mb-8">
                <div class="card-body p-6">
                    <div class="flex justify-between items-center mb-4 px-4 py-2">
                        <h4 class="font-bold text-gray-700">Active & Scheduled Offers</h4>
                        <div class="text-sm text-gray-500">
                            Total: <%= offers.length %> offers
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover w-full">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">#</th>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Offer Type</th>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Applied To</th>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Discount</th>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expiry Date</th>
                                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th class="py-3 px-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                <% offers.forEach((offer, index) => { %>
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="py-3 px-4 whitespace-nowrap"><%= index + 1 %></td>
                                        <td class="py-3 px-4 whitespace-nowrap">
                                            <% if (offer.offer_type === "product") { %>
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    Product
                                                </span>
                                            <% } else if (offer.offer_type === "category") { %>
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                                                    Category
                                                </span>
                                            <% } else if (offer.offer_type === "referral") { %>
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                    Referral
                                                </span>
                                            <% } else { %>
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                    Other
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4">
                                            <% if (offer.offer_type === "product" && offer.products && offer.products.length > 0) { %>
                                                <div class="text-sm text-gray-900 font-medium">
                                                    <% if (offer.products.length <= 2) { %>
                                                        <%= offer.products.map(prod => prod.product_name).join(", ") %>
                                                    <% } else { %>
                                                        <%= offer.products[0].product_name %>, <%= offer.products[1].product_name %> 
                                                        <span class="text-blue-600 font-medium">+<%= offer.products.length - 2 %> more</span>
                                                    <% } %>
                                                </div>
                                            <% } else if (offer.offer_type === "category" && offer.categories && offer.categories.length > 0) { %>
                                                <div class="text-sm text-gray-900 font-medium">
                                                    <% if (offer.categories.length <= 2) { %>
                                                        <%= offer.categories.map(cat => cat.name).join(", ") %>
                                                    <% } else { %>
                                                        <%= offer.categories[0].name %>, <%= offer.categories[1].name %> 
                                                        <span class="text-blue-600 font-medium">+<%= offer.categories.length - 2 %> more</span>
                                                    <% } %>
                                                </div>
                                            <% } else if (offer.offer_type === "referral") { %>
                                                <div class="text-sm text-gray-900 font-medium">
                                                    <%= offer.referral_code %>
                                                </div>
                                            <% } else { %>
                                                <span class="text-gray-500">-</span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4 whitespace-nowrap">
                                            <div class="text-sm font-bold text-blue-600"><%= offer.offer_percentage %>%</div>
                                        </td>
                                        <td class="py-3 px-4 whitespace-nowrap">
                                            <% 
                                                const expiryDate = new Date(offer.expiry_date);
                                                const today = new Date();
                                                const diffTime = expiryDate - today;
                                                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                                            %>
                                            <div class="text-sm text-gray-900"><%= expiryDate.toDateString() %></div>
                                            <% if (diffDays <= 5 && diffDays > 0) { %>
                                                <span class="text-xs text-red-500">Expires in <%= diffDays %> day<%= diffDays === 1 ? '' : 's' %></span>
                                            <% } else if (diffDays <= 0) { %>
                                                <span class="text-xs text-red-500">Expired</span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4 whitespace-nowrap">
                                            <% if (offer.isActive) { %>
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                    Active
                                                </span>
                                            <% } else { %>
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                                    Disabled
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-3 px-4 text-right text-sm font-medium whitespace-nowrap">
                                            <div class="flex items-center justify-end space-x-2">
                                                <label class="relative inline-flex items-center cursor-pointer">
                                                    <input type="checkbox" value="" class="sr-only peer" <%= offer.isActive ? 'checked' : '' %> onchange="toggleOfferStatus('<%= offer._id %>', this.checked)">
                                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
                                                </label>
                                                <button class="btn btn-sm btn-outline-primary edit-offer px-3 py-1 rounded-lg text-xs" data-offer='<%- JSON.stringify(offer) %>'>
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 inline" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                                    </svg>
                                                    Edit
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger delete-offer px-3 py-1 rounded-lg text-xs" data-id="<%= offer._id %>">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 inline" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                    </svg>
                                                    Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                                <% if (offers.length === 0) { %>
                                    <tr>
                                        <td colspan="7" class="py-8 text-center text-gray-500">
                                            <div class="flex flex-col items-center">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-300 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4M20 12a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v4a2 2 0 002 2M20 12v6a2 2 0 01-2 2H6a2 2 0 01-2-2v-6" />
                                                </svg>
                                                <h3 class="text-lg font-medium">No offers available</h3>
                                                <p class="text-sm">Create your first offer to start giving discounts</p>
                                            </div>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Pagination Controls -->
                    <div class="mt-4 flex justify-center">
                        <nav aria-label="Pagination">
                            <ul class="inline-flex -space-x-px">
                                <% if (currentPage > 1) { %>
                                    <li>
                                        <a href="?page=<%= currentPage - 1 %>" class="py-2 px-3 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700">Previous</a>
                                    </li>
                                <% } else { %>
                                    <li>
                                        <span class="py-2 px-3 ml-0 leading-tight text-gray-400 bg-gray-200 border border-gray-300 rounded-l-lg">Previous</span>
                                    </li>
                                <% } %>
                                
                                <% for(let i = 1; i <= totalPages; i++) { %>
                                    <% if (i === currentPage) { %>
                                        <li>
                                            <span class="py-2 px-3 leading-tight text-blue-600 bg-blue-50 border border-blue-300"><%= i %></span>
                                        </li>
                                    <% } else { %>
                                        <li>
                                            <a href="?page=<%= i %>" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700"><%= i %></a>
                                        </li>
                                    <% } %>
                                <% } %>
                                
                                <% if (currentPage < totalPages) { %>
                                    <li>
                                        <a href="?page=<%= currentPage + 1 %>" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700">Next</a>
                                    </li>
                                <% } else { %>
                                    <li>
                                        <span class="py-2 px-3 leading-tight text-gray-400 bg-gray-200 border border-gray-300 rounded-r-lg">Next</span>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                    
                </div>
            </div>
            
            <!-- Offer Creation Form Section -->
            <div class="card bg-white">
                <div class="card-body p-6">
                    <div class="bg-blue-50 p-5 rounded-lg">
                        <h4 class="font-bold mb-4 text-gray-800 border-b pb-2">Create New Offer</h4>
                        <form id="offerForm">
                            <div class="mb-4">
                                <label for="offer_type" class="form-label text-gray-700">Offer Type</label>
                                <select name="offer_type" class="form-control border p-2 rounded-lg w-full bg-white" id="offer_type" required>
                                    <option value="">Select Offer Type</option>
                                    <option value="category">Category Discount</option>
                                    <option value="product">Product Discount</option>
                                </select>
                            </div>
                            <div class="mb-4">
                                <label for="offer_percentage" class="form-label text-gray-700">Discount Percentage (%)</label>
                                <div class="relative">
                                    <input type="number" name="offer_percentage" placeholder="Enter percentage" class="form-control border p-2 rounded-lg w-full" id="offer_percentage" required />
                                    <span class="absolute right-3 top-2 text-gray-500">%</span>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label for="expiry_date" class="form-label text-gray-700">Valid Until</label>
                                <input type="date" name="expiry_date" class="form-control border p-2 rounded-lg w-full" id="expiry_date" required />
                            </div>
                            
                            <div class="mb-4 transition-all duration-300" id="productSelection" style="display:none;">
                                <label for="products" class="form-label text-gray-700">Select Products</label>
                                <div class="bg-gray-100 p-2 rounded text-xs text-gray-600 mb-2">
                                    Hold Ctrl/Cmd to select multiple
                                </div>
                                <select name="products" id="products" class="form-control border p-2 rounded-lg w-full" multiple>
                                    <% if (products && products.length > 0) { %>
                                        <% products.forEach(function(product) { %>
                                            <option value="<%= product._id %>"><%= product.product_name %></option>
                                        <% }); %>
                                    <% } else { %>
                                        <option value="">No products available</option>
                                    <% } %>
                                </select>
                            </div>
                            
                            <div class="mb-4 transition-all duration-300" id="categorySelection" style="display:none;">
                                <label for="categories" class="form-label text-gray-700">Select Categories</label>
                                <div class="bg-gray-100 p-2 rounded text-xs text-gray-600 mb-2">
                                    Hold Ctrl/Cmd to select multiple
                                </div>
                                <select name="categories" id="categories" class="form-control border p-2 rounded-lg w-full" multiple>
                                    <% if (categories && categories.length > 0) { %>
                                        <% categories.forEach(function(category) { %>
                                            <option value="<%= category._id %>"><%= category.name %></option>
                                        <% }); %>
                                    <% } else { %>
                                        <option value="">No categories available</option>
                                    <% } %>
                                </select>
                            </div>
                            
                            <div class="mb-4 transition-all duration-300" id="referralFields" style="display:none;">
                                <label for="referral_code" class="form-label text-gray-700">Referral Code</label>
                                <input type="text" name="referral_code" placeholder="Enter referral code" class="form-control border p-2 rounded-lg w-full" id="referral_code" />
                            </div>
                            
                            <div class="mb-4 transition-all duration-300" id="referralBonus" style="display:none;">
                                <label for="referral_bonus" class="form-label text-gray-700">Referral Bonus</label>
                                <input type="number" name="referral_bonus" placeholder="Enter bonus amount" class="form-control border p-2 rounded-lg w-full" id="referral_bonus" min="0" />
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary w-full py-2 rounded-lg font-medium flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                    </svg>
                                    Create Offer
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>
        <%- include('./partials/footer') %>
    </main>
    
    <!-- Edit Offer Modal -->
    <div id="editModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 hidden z-50">
        <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-md max-h-90vh overflow-y-auto">
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold text-gray-800">Edit Offer Details</h3>
                <button id="editModalClose" class="text-gray-400 hover:text-gray-600 transition duration-150 ease-in-out">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <form id="editOfferForm">
                <input type="hidden" id="edit_offer_id" name="offer_id">
                <div class="space-y-4">
                    <div class="mb-4">
                        <label for="edit_offer_type" class="form-label text-gray-700 font-medium">Offer Type</label>
                        <select name="edit_offer_type" id="edit_offer_type" class="form-control border p-2 rounded-lg w-full" required>
                            <option value="">Select Offer Type</option>
                            <option value="category">Category Discount</option>
                            <option value="product">Product Discount</option>
                            <option value="referral">Referral</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="mb-4">
                        <label for="edit_offer_percentage" class="form-label text-gray-700 font-medium">Discount Percentage (%)</label>
                        <div class="relative">
                            <input type="number" name="edit_offer_percentage" id="edit_offer_percentage" class="form-control border p-2 rounded-lg w-full" required>
                            <span class="absolute right-3 top-2 text-gray-500">%</span>
                        </div>
                    </div>
                    <div class="mb-4">
                        <label for="edit_expiry_date" class="form-label text-gray-700 font-medium">Valid Until</label>
                        <input type="date" name="edit_expiry_date" id="edit_expiry_date" class="form-control border p-2 rounded-lg w-full" required>
                    </div>
                    <div class="mb-4 transition-all duration-300" id="edit_productSelection" style="display:none;">
                        <label for="edit_products" class="form-label text-gray-700 font-medium">Select Products</label>
                        <div class="bg-gray-100 p-2 rounded text-xs text-gray-600 mb-2">
                            Hold Ctrl/Cmd to select multiple
                        </div>
                        <select name="edit_products" id="edit_products" class="form-control border p-2 rounded-lg w-full" multiple>
                            <% if (products && products.length > 0) { %>
                                <% products.forEach(function(product) { %>
                                    <option value="<%= product._id %>"><%= product.product_name %></option>
                                <% }); %>
                            <% } else { %>
                                <option value="">No products available</option>
                            <% } %>
                        </select>
                    </div>
                    <div class="mb-4 transition-all duration-300" id="edit_categorySelection" style="display:none;">
                        <label for="edit_categories" class="form-label text-gray-700 font-medium">Select Categories</label>
                        <div class="bg-gray-100 p-2 rounded text-xs text-gray-600 mb-2">
                            Hold Ctrl/Cmd to select multiple
                        </div>
                        <select name="edit_categories" id="edit_categories" class="form-control border p-2 rounded-lg w-full" multiple>
                            <% if (categories && categories.length > 0) { %>
                                <% categories.forEach(function(category) { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }); %>
                            <% } else { %>
                                <option value="">No categories available</option>
                            <% } %>
                        </select>
                    </div>
                    <div class="mb-4 transition-all duration-300" id="edit_referralFields" style="display:none;">
                        <label for="edit_referral_code" class="form-label text-gray-700 font-medium">Referral Code</label>
                        <input type="text" name="edit_referral_code" id="edit_referral_code" class="form-control border p-2 rounded-lg w-full">
                    </div>
                    <div class="mb-4 transition-all duration-300" id="edit_referralBonus" style="display:none;">
                        <label for="edit_referral_bonus" class="form-label text-gray-700 font-medium">Referral Bonus</label>
                        <input type="number" name="edit_referral_bonus" id="edit_referral_bonus" class="form-control border p-2 rounded-lg w-full" min="0">
                    </div>
                    <div class="flex justify-end space-x-3 pt-4 border-t">
                        <button type="button" class="btn btn-secondary px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-lg transition-colors" id="cancelEditBtn">Cancel</button>
                        <button type="submit" class="btn btn-primary px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">Update Offer</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Function to show notifications using SweetAlert2
        function showNotification(message, isSuccess = true) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });

            Toast.fire({
                icon: isSuccess ? 'success' : 'error',
                title: message
            });
        }

        // Toggle Offer Active Status using fetch
        async function toggleOfferStatus(id, isActive) {
            try {
                const response = await fetch(`/admin/dashboard/product/toggle-offer-status/${id}`, {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ isActive: isActive })
                });
                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: `Offer ${isActive ? 'activated' : 'deactivated'} successfully!`,
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error('Failed to update offer status');
                }
            } catch (error) {
                console.error('Error updating offer status:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Failed to update offer status. Please try again.'
                });
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Toggle additional fields based on offer type selection for create offer form
            document.getElementById('offer_type').addEventListener('change', function() {
                const type = this.value;
                const productSelection = document.getElementById('productSelection');
                const categorySelection = document.getElementById('categorySelection');
                const referralFields = document.getElementById('referralFields');
                const referralBonus = document.getElementById('referralBonus');
                
                // Use smooth transitions
                [productSelection, categorySelection, referralFields, referralBonus].forEach(el => {
                    el.style.display = 'none';
                    el.style.opacity = '0';
                    el.style.height = '0';
                });
                
                setTimeout(() => {
                    if (type === 'product') {
                        productSelection.style.display = 'block';
                        setTimeout(() => {
                            productSelection.style.opacity = '1';
                            productSelection.style.height = 'auto';
                        }, 50);
                    } else if (type === 'category') {
                        categorySelection.style.display = 'block';
                        setTimeout(() => {
                            categorySelection.style.opacity = '1';
                            categorySelection.style.height = 'auto';
                        }, 50);
                    } else if (type === 'referral') {
                        referralFields.style.display = 'block';
                        referralBonus.style.display = 'block';
                        setTimeout(() => {
                            referralFields.style.opacity = '1';
                            referralBonus.style.opacity = '1';
                            referralFields.style.height = 'auto';
                            referralBonus.style.height = 'auto';
                        }, 50);
                    }
                }, 50);
            });

            // Offer creation form submission using fetch with validation for negative values
            const offerForm = document.getElementById('offerForm');
            offerForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Show loading state
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.innerHTML = `
                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Processing...
                `;
                submitBtn.disabled = true;
                
                const offerType = document.getElementById('offer_type').value;
                const offerPercentage = parseFloat(document.getElementById('offer_percentage').value);
                const expiryDate = document.getElementById('expiry_date').value;

                // Form validation
                if (!offerType) {
                    Swal.fire('Warning', 'Please select an offer type.', 'warning');
                    resetButton();
                    return;
                }
                
                if (isNaN(offerPercentage) || offerPercentage <= 0) {
                    Swal.fire('Warning', 'Please enter a valid positive percentage value.', 'warning');
                    resetButton();
                    return;
                }

                if (offerPercentage > 100) {
                    Swal.fire({
                        title: 'Confirm Percentage',
                        text: 'You entered a discount greater than 100%. Are you sure this is correct?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, proceed',
                        cancelButtonText: 'No, I\'ll fix it'
                    }).then((result) => {
                        if (!result.isConfirmed) {
                            resetButton();
                            return;
                        } else {
                            processFormSubmission();
                        }
                    });
                    return;
                }
                
                if (!expiryDate) {
                    Swal.fire('Warning', 'Please select an expiry date.', 'warning');
                    resetButton();
                    return;
                }
                
                // Check if expiry date is in the past
                const selectedDate = new Date(expiryDate);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                
                if (selectedDate < today) {
                    Swal.fire('Warning', 'Expiry date cannot be in the past.', 'warning');
                    resetButton();
                    return;
                }
                
                processFormSubmission();
                
                function resetButton() {
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                }
                
                function processFormSubmission() {
                    const formData = { 
                        offer_type: offerType, 
                        offer_percentage: offerPercentage, 
                        expiry_date: expiryDate 
                    };

                    // Add additional fields based on offer type
                    if (offerType === 'product') {
                        const selectedProducts = Array.from(document.getElementById('products').selectedOptions).map(option => option.value);
                        if (selectedProducts.length === 0) {
                            Swal.fire('Warning', 'Please select at least one product.', 'warning');
                            resetButton();
                            return;
                        }
                        formData.products = selectedProducts;
                    } else if (offerType === 'category') {
                        const selectedCategories = Array.from(document.getElementById('categories').selectedOptions).map(option => option.value);
                        if (selectedCategories.length === 0) {
                            Swal.fire('Warning', 'Please select at least one category.', 'warning');
                            resetButton();
                            return;
                        }
                        formData.categories = selectedCategories;
                    } else if (offerType === 'referral') {
                        const referralCode = document.getElementById('referral_code').value;
                        const referralBonus = parseFloat(document.getElementById('referral_bonus').value || "0");
                        if(referralCode.trim() === ""){
                            Swal.fire('Error', 'Referral code is required for referral offers.', 'error');
                            resetButton();
                            return;
                        }
                        if(referralBonus < 0){
                            Swal.fire('Error', 'Negative value is not allowed for referral bonus.', 'error');
                            resetButton();
                            return;
                        }
                        formData.referral_code = referralCode;
                        formData.referral_bonus = referralBonus;
                    }

                    fetch('/admin/dashboard/product/add-offer', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        resetButton();
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Offer Created!',
                                text: data.message,
                                confirmButtonColor: '#3b82f6'
                            }).then(() => window.location.reload());
                            offerForm.reset();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message,
                                confirmButtonColor: '#3b82f6'
                            });
                        }
                    })
                    .catch(err => {
                        resetButton();
                        console.error('Network error:', err);
                        Swal.fire({
                            icon: 'error',
                            title: 'Connection Error',
                            text: 'An unexpected error occurred. Please check your connection and try again.',
                            confirmButtonColor: '#3b82f6'
                        });
                    });
                }
            });

            // Delete offer functionality using fetch and SweetAlert2 confirmation
            const deleteButtons = document.querySelectorAll('.delete-offer');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();
                    const offerId = this.getAttribute('data-id');
                    
                    Swal.fire({
                        title: 'Delete Offer?',
                        text: "This action cannot be undone. All related discounts will be removed.",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#ef4444',
                        cancelButtonColor: '#6b7280',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel',
                        showClass: {
                            popup: 'animate__animated animate__fadeIn'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Deleting...',
                                text: 'Please wait while we process your request.',
                                allowOutsideClick: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });
                            
                            fetch(`/admin/dashboard/product/delete-offer/${offerId}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' },
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: data.message,
                                        confirmButtonColor: '#3b82f6'
                                    }).then(() => window.location.reload());
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error!',
                                        text: data.message,
                                        confirmButtonColor: '#3b82f6'
                                    });
                                }
                            })
                            .catch(err => {
                                console.error('Network error:', err);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Connection Error',
                                    text: 'Failed to connect to the server. Please check your connection and try again.',
                                    confirmButtonColor: '#3b82f6'
                                });
                            });
                        }
                    });
                });
            });

            // Edit offer functionality: open modal with pre-filled data
            document.querySelectorAll('.edit-offer').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const offer = JSON.parse(this.getAttribute('data-offer'));
                    
                    // Fill modal form fields with offer details
                    document.getElementById('edit_offer_id').value = offer._id;
                    document.getElementById('edit_offer_type').value = offer.offer_type;
                    document.getElementById('edit_offer_percentage').value = offer.offer_percentage;
                    document.getElementById('edit_expiry_date').value = new Date(offer.expiry_date).toISOString().substr(0,10);
                    
                    // Reset selections
                    document.getElementById('edit_products').selectedIndex = -1;
                    document.getElementById('edit_categories').selectedIndex = -1;
                    document.getElementById('edit_referral_code').value = offer.referral_code || "";
                    document.getElementById('edit_referral_bonus').value = offer.referral_bonus || 0;
                    
                    // Toggle additional fields based on type
                    toggleEditFields(offer.offer_type);
                    
                    if (offer.offer_type === "product" && offer.products) {
                        let productSelect = document.getElementById('edit_products');
                        offer.products.forEach(prod => {
                            for(let i=0; i<productSelect.options.length; i++){
                                if(productSelect.options[i].value === prod._id || productSelect.options[i].value === prod) {
                                    productSelect.options[i].selected = true;
                                }
                            }
                        });
                    }
                    
                    if (offer.offer_type === "category" && offer.categories) {
                        let categorySelect = document.getElementById('edit_categories');
                        offer.categories.forEach(cat => {
                            for(let i=0; i<categorySelect.options.length; i++){
                                if(categorySelect.options[i].value === cat._id || categorySelect.options[i].value === cat) {
                                    categorySelect.options[i].selected = true;
                                }
                            }
                        });
                    }
                    
                    // Show modal with animation
                    const editModal = document.getElementById('editModal');
                    editModal.classList.remove('hidden');
                    editModal.classList.add('animate__animated', 'animate__fadeIn');
                    
                    // Focus on first field
                    setTimeout(() => {
                        document.getElementById('edit_offer_type').focus();
                    }, 300);
                });
            });

            // Close edit modal handlers
            document.getElementById('editModalClose').addEventListener('click', closeEditModal);
            document.getElementById('cancelEditBtn').addEventListener('click', closeEditModal);
            
            // Click outside modal to close
            document.getElementById('editModal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closeEditModal();
                }
            });
            
            function closeEditModal() {
                const editModal = document.getElementById('editModal');
                editModal.classList.add('hidden');
            }

            // On change of edit_offer_type, toggle additional fields in edit form
            document.getElementById('edit_offer_type').addEventListener('change', function() {
                toggleEditFields(this.value);
            });

            function toggleEditFields(type) {
                const editProductSelection = document.getElementById('edit_productSelection');
                const editCategorySelection = document.getElementById('edit_categorySelection');
                const editReferralFields = document.getElementById('edit_referralFields');
                const editReferralBonus = document.getElementById('edit_referralBonus');
                
                // Use smooth transitions
                [editProductSelection, editCategorySelection, editReferralFields, editReferralBonus].forEach(el => {
                    el.style.display = 'none';
                    el.style.opacity = '0';
                    el.style.height = '0';
                });
                
                setTimeout(() => {
                    if (type === 'product') {
                        editProductSelection.style.display = 'block';
                        setTimeout(() => {
                            editProductSelection.style.opacity = '1';
                            editProductSelection.style.height = 'auto';
                        }, 50);
                    } else if (type === 'category') {
                        editCategorySelection.style.display = 'block';
                        setTimeout(() => {
                            editCategorySelection.style.opacity = '1';
                            editCategorySelection.style.height = 'auto';
                        }, 50);
                    } else if (type === 'referral') {
                        editReferralFields.style.display = 'block';
                        editReferralBonus.style.display = 'block';
                        setTimeout(() => {
                            editReferralFields.style.opacity = '1';
                            editReferralBonus.style.opacity = '1';
                            editReferralFields.style.height = 'auto';
                            editReferralBonus.style.height = 'auto';
                        }, 50);
                    }
                }, 50);
            }

            // Edit offer form submission using fetch for updating offer
            document.getElementById('editOfferForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Show loading state
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.innerHTML = `
                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Updating...
                `;
                submitBtn.disabled = true;
                
                const offerId = document.getElementById('edit_offer_id').value;
                const offerType = document.getElementById('edit_offer_type').value;
                const offerPercentage = parseFloat(document.getElementById('edit_offer_percentage').value);
                const expiryDate = document.getElementById('edit_expiry_date').value;
                
                // Form validation
                if (!offerType) {
                    Swal.fire('Warning', 'Please select an offer type.', 'warning');
                    resetButton();
                    return;
                }
                
                if (isNaN(offerPercentage) || offerPercentage < 0) {
                    Swal.fire('Warning', 'Please enter a valid non-negative percentage value.', 'warning');
                    resetButton();
                    return;
                }

                if (!expiryDate) {
                    Swal.fire('Warning', 'Please select an expiry date.', 'warning');
                    resetButton();
                    return;
                }
                
                // Check if expiry date is in the past
                const selectedDate = new Date(expiryDate);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                
                if (selectedDate < today) {
                    Swal.fire({
                        title: 'Warning',
                        text: 'The expiry date you selected is in the past. This will immediately expire the offer. Continue?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, proceed',
                        cancelButtonText: 'No, I\'ll fix it'
                    }).then((result) => {
                        if (!result.isConfirmed) {
                            resetButton();
                            return;
                        } else {
                            processFormSubmission();
                        }
                    });
                    return;
                }
                
                processFormSubmission();
                
                function resetButton() {
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                }
                
                function processFormSubmission() {
                    let formData = {
                        offer_id: offerId,
                        offer_type: offerType,
                        offer_percentage: offerPercentage,
                        expiry_date: expiryDate
                    };
                    
                    if (offerType === 'product') {
                        const selectedProducts = Array.from(document.getElementById('edit_products').selectedOptions).map(option => option.value);
                        if (selectedProducts.length === 0) {
                            Swal.fire('Warning', 'Please select at least one product.', 'warning');
                            resetButton();
                            return;
                        }
                        formData.products = selectedProducts;
                    } else if (offerType === 'category') {
                        const selectedCategories = Array.from(document.getElementById('edit_categories').selectedOptions).map(option => option.value);
                        if (selectedCategories.length === 0) {
                            Swal.fire('Warning', 'Please select at least one category.', 'warning');
                            resetButton();
                            return;
                        }
                        formData.categories = selectedCategories;
                    } else if (offerType === 'referral') {
                        const referralCode = document.getElementById('edit_referral_code').value;
                        const referralBonus = parseFloat(document.getElementById('edit_referral_bonus').value || "0");
                        if(referralCode.trim() === ""){
                            Swal.fire('Error', 'Referral code is required for referral offers.', 'error');
                            resetButton();
                            return;
                        }
                        if(referralBonus < 0){
                            Swal.fire('Error', 'Negative value is not allowed for referral bonus.', 'error');
                            resetButton();
                            return;
                        }
                        formData.referral_code = referralCode;
                        formData.referral_bonus = referralBonus;
                    }
                    
                    fetch('/admin/dashboard/product/edit-offer', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        resetButton();
                        if(data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Updated!',
                                text: data.message,
                                confirmButtonColor: '#3b82f6'
                            }).then(() => window.location.reload());
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message,
                                confirmButtonColor: '#3b82f6'
                            });
                        }
                    })
                    .catch(err => {
                        resetButton();
                        console.error('Network error:', err);
                        Swal.fire({
                            icon: 'error',
                            title: 'Connection Error',
                            text: 'Failed to connect to the server. Please check your connection and try again.',
                            confirmButtonColor: '#3b82f6'
                        });
                    });
                }
            });
        });
    </script>
    <%- include('./partials/scriptsLinks') %>
</body>
</html>
