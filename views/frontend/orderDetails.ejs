<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Guitman - Order Details</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f5f3ff',
              100: '#ede9fe',
              200: '#ddd6fe',
              300: '#c4b5fd',
              400: '#a78bfa',
              500: '#8b5cf6',
              600: '#7c3aed',
              700: '#6d28d9',
              800: '#5b21b6',
              900: '#4c1d95',
              950: '#2e1065',
            }
          },
          fontFamily: {
            sans: ['Inter', 'sans-serif'],
          },
          animation: {
            'fade-in': 'fadeIn 0.3s ease-in-out',
            'fade-out': 'fadeOut 0.3s ease-in-out',
            'slide-up': 'slideUp 0.3s ease-in-out',
            'slide-down': 'slideDown 0.3s ease-in-out',
            'pulse-slow': 'pulse 3s infinite',
          },
          keyframes: {
            fadeIn: {
              '0%': { opacity: '0' },
              '100%': { opacity: '1' },
            },
            fadeOut: {
              '0%': { opacity: '1' },
              '100%': { opacity: '0' },
            },
            slideUp: {
              '0%': { transform: 'translateY(10px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            },
            slideDown: {
              '0%': { transform: 'translateY(-10px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            },
          },
          boxShadow: {
            'soft': '0 2px 10px rgba(0, 0, 0, 0.05)',
            'hover': '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.05)',
          }
        }
      }
    }
  </script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
      scroll-behavior: smooth;
    }

    /* Toast notification styling */
    .toast-container {
      position: fixed;
      top: 1.5rem;
      right: 1.5rem;
      z-index: 50;
      max-width: 24rem;
      width: calc(100% - 2rem);
    }

    .toast {
      transform: translateY(-100%);
      opacity: 0;
      transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    }

    .toast.show {
      transform: translateY(0);
      opacity: 1;
    }

    /* Order status progress styling */
    .progress-track {
      position: relative;
      height: 3px;
      background-color: #e5e7eb;
      border-radius: 9999px;
      overflow: hidden;
    }

    .progress-bar {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: #7c3aed;
      transition: width 0.5s ease;
    }

    .progress-step {
      position: relative;
      z-index: 10;
    }

    .progress-step::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: #f5f3ff;
      z-index: -1;
    }

    .progress-step.active::before {
      background-color: #ede9fe;
    }

    .progress-step.completed::before {
      background-color: #ddd6fe;
    }

    /* Star rating styling */
    .star-btn {
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .star-btn:hover ~ .star-btn {
      color: #d1d5db !important;
    }

    /* Ripple effect for buttons */
    .ripple {
      position: relative;
      overflow: hidden;
    }

    .ripple::after {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
      background-repeat: no-repeat;
      background-position: 50%;
      transform: scale(10, 10);
      opacity: 0;
      transition: transform .5s, opacity 1s;
    }

    .ripple:active::after {
      transform: scale(0, 0);
      opacity: .3;
      transition: 0s;
    }

    /* Custom scrollbar */
    .custom-scrollbar::-webkit-scrollbar {
      width: 6px;
      height: 6px;
    }

    .custom-scrollbar::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }

    .custom-scrollbar::-webkit-scrollbar-thumb {
      background: #c4b5fd;
      border-radius: 10px;
    }

    .custom-scrollbar::-webkit-scrollbar-thumb:hover {
      background: #a78bfa;
    }

    /* Print styles for invoice */
    @media print {
      body * {
        visibility: hidden;
      }
      #invoice-content, #invoice-content * {
        visibility: visible;
      }
      #invoice-content {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
      }
      .no-print {
        display: none !important;
      }
    }
  </style>
</head>

<body class="bg-gray-50">
  <%- include('./partials/loading') %>
  <%- include('./partials/header') %>

  <!-- Toast Container -->
  <div id="toast-container" class="toast-container"></div>

  <div class="flex flex-col min-h-screen pt-20">
    <div class="flex flex-col md:flex-row flex-1">
      <%- include('./partials/profileAside') %>
      
      <main class="flex-1 pb-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <!-- Breadcrumbs -->
          <nav class="flex mb-6" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
              <li class="inline-flex items-center">
                <a href="/" class="text-sm text-gray-500 hover:text-primary-600 inline-flex items-center">
                  <i class="fas fa-home mr-2"></i>
                  Home
                </a>
              </li>
              <li>
                <div class="flex items-center">
                  <i class="fas fa-chevron-right text-gray-400 text-xs mx-2"></i>
                  <a href="/profile" class="text-sm text-gray-500 hover:text-primary-600">
                    My Account
                  </a>
                </div>
              </li>
              <li>
                <div class="flex items-center">
                  <i class="fas fa-chevron-right text-gray-400 text-xs mx-2"></i>
                  <a href="/profile/orders" class="text-sm text-gray-500 hover:text-primary-600">
                    My Orders
                  </a>
                </div>
              </li>
              <li aria-current="page">
                <div class="flex items-center">
                  <i class="fas fa-chevron-right text-gray-400 text-xs mx-2"></i>
                  <span class="text-sm text-primary-600 font-medium">
                    Order #<%= order.order_id %>
                  </span>
                </div>
              </li>
            </ol>
          </nav>

          <!-- Order Header -->
          <div class="bg-white rounded-xl shadow-soft p-6 mb-6 border border-gray-100">
            <div class="flex flex-col sm:flex-row justify-between items-start gap-4">
              <div>
                <div class="flex items-center">
                  <h1 class="text-2xl font-bold text-gray-900">
                    Order #<span class="text-primary-600"><%= order.order_id %></span>
                  </h1>
                  <% if(order.payment_status === 'paid') { %>
                    <span class="ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <i class="fas fa-check-circle mr-1"></i> Paid
                    </span>
                  <% } else if(order.payment_status === 'pending') { %>
                    <span class="ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                      <i class="fas fa-clock mr-1"></i> Payment Pending
                    </span>
                  <% } else if(order.payment_status === 'failed') { %>
                    <span class="ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      <i class="fas fa-exclamation-circle mr-1"></i> Payment Failed
                    </span>
                  <% } %>
                </div>
                <p class="text-sm text-gray-600 mt-1 flex items-center">
                  <i class="far fa-calendar-alt mr-2 text-primary-400"></i>
                  Ordered on <%= new Date(order.timestamp).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %> at <%= new Date(order.timestamp).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %>
                </p>
              </div>
              
              <div class="flex flex-wrap gap-3">
                <button id="downloadInvoiceBtn" class="inline-flex items-center px-4 py-2 bg-primary-50 text-primary-700 hover:bg-primary-100 rounded-lg border border-primary-200 transition-colors text-sm font-medium">
                  <i class="fas fa-file-invoice mr-2"></i> Download Invoice
                </button>
                
                <% if(order.return_details && order.return_details.status !== 'none') { %>
                  <div class="inline-flex items-center px-4 py-2 bg-amber-50 text-amber-700 rounded-lg border border-amber-200 text-sm font-medium">
                    <i class="fas fa-undo-alt mr-2"></i>
                    Return <%= order.return_details.status.charAt(0).toUpperCase() + order.return_details.status.slice(1) %>
                  </div>
                <% } else if(order.order_status === 'pending' || order.order_status === 'processing') { %>
                  <button id="cancelOrderBtn" class="inline-flex items-center px-4 py-2 bg-red-50 hover:bg-red-100 text-red-700 rounded-lg border border-red-200 transition-colors text-sm font-medium">
                    <i class="fas fa-times mr-2"></i> Cancel Order
                  </button>
                <% } else if(order.order_status === 'delivered') { %>
                  <button id="returnOrderBtn" class="inline-flex items-center px-4 py-2 bg-amber-50 hover:bg-amber-100 text-amber-700 rounded-lg border border-amber-200 transition-colors text-sm font-medium">
                    <i class="fas fa-undo mr-2"></i> Return Order
                  </button>
                <% } %>
              </div>
            </div>
          </div>
          
          <!-- Payment Status Handling -->
          <% if(order.payment_status === 'failed') { %>
            <div class="bg-red-50 border border-red-200 rounded-xl p-6 mb-6 shadow-soft animate-fade-in">
              <div class="flex items-center">
                <div class="flex-shrink-0 w-12 h-12 rounded-full bg-red-100 flex items-center justify-center mr-4">
                  <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
                </div>
                <div>
                  <h3 class="text-lg font-semibold text-red-800">Payment Failed</h3>
                  <p class="text-sm text-red-700 mt-1">Your payment for this order was not successful. Please retry the payment to complete your order.</p>
                </div>
              </div>
              <div class="mt-4 ml-16">
                <button id="retryPaymentBtn" class="px-5 py-2.5 bg-primary-600 hover:bg-primary-700 text-white text-sm font-medium rounded-lg transition-colors shadow-sm flex items-center">
                  <i class="fas fa-redo-alt mr-2"></i> Retry Payment
                </button>
              </div>
            </div>
          <% } %>

          <!-- Return Status Banner (if applicable) -->
          <% if(order.return_details && order.return_details.status !== 'none') { %>
            <div class="bg-amber-50 border border-amber-200 rounded-xl p-6 mb-6 shadow-soft animate-fade-in">
              <div class="flex items-start">
                <div class="flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center mr-4">
                  <% if(order.return_details.status === 'requested') { %>
                    <div class="w-full h-full rounded-full bg-amber-100 flex items-center justify-center">
                      <i class="fas fa-clock text-amber-600 text-xl"></i>
                    </div>
                  <% } else if(order.return_details.status === 'approved') { %>
                    <div class="w-full h-full rounded-full bg-green-100 flex items-center justify-center">
                      <i class="fas fa-check text-green-600 text-xl"></i>
                    </div>
                  <% } else if(order.return_details.status === 'rejected') { %>
                    <div class="w-full h-full rounded-full bg-red-100 flex items-center justify-center">
                      <i class="fas fa-times text-red-600 text-xl"></i>
                    </div>
                  <% } else if(order.return_details.status === 'completed') { %>
                    <div class="w-full h-full rounded-full bg-blue-100 flex items-center justify-center">
                      <i class="fas fa-check-double text-blue-600 text-xl"></i>
                    </div>
                  <% } %>
                </div>
                <div class="flex-1">
                  <h3 class="text-lg font-semibold text-amber-800">
                    Return <%= order.return_details.status.charAt(0).toUpperCase() + order.return_details.status.slice(1) %>
                  </h3>
                  <div class="mt-2 text-sm text-amber-700">
                    <% if(order.return_details.status === 'requested') { %>
                      <p>Your return request has been submitted and is pending review. Our team will process your request within 24-48 hours.</p>
                      <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Reason:</p>
                          <p class="text-amber-700"><%= order.return_details.reason %></p>
                        </div>
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Requested on:</p>
                          <p class="text-amber-700"><%= new Date(order.return_details.requested_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                        </div>
                      </div>
                    <% } else if(order.return_details.status === 'approved') { %>
                      <p>Your return request has been approved. Please follow the instructions sent to your email to complete the return process.</p>
                      <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Reason:</p>
                          <p class="text-amber-700"><%= order.return_details.reason %></p>
                        </div>
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Approved on:</p>
                          <p class="text-amber-700"><%= new Date(order.return_details.processed_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                        </div>
                      </div>
                    <% } else if(order.return_details.status === 'rejected') { %>
                      <p>Your return request has been rejected. Please contact our customer support for more information.</p>
                      <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Reason:</p>
                          <p class="text-amber-700"><%= order.return_details.reason %></p>
                        </div>
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Processed on:</p>
                          <p class="text-amber-700"><%= new Date(order.return_details.processed_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                        </div>
                      </div>
                    <% } else if(order.return_details.status === 'completed') { %>
                      <p>Your return has been completed successfully. A refund has been issued to your original payment method.</p>
                      <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Reason:</p>
                          <p class="text-amber-700"><%= order.return_details.reason %></p>
                        </div>
                        <div class="bg-white bg-opacity-50 rounded-lg p-3">
                          <p class="font-medium text-amber-800">Completed on:</p>
                          <p class="text-amber-700"><%= new Date(order.return_details.processed_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                        </div>
                      </div>
                    <% } %>
                  </div>
                  <% if(order.return_details.status === 'requested' || order.return_details.status === 'approved') { %>
                    <div class="mt-4">
                      <a href="#" class="inline-flex items-center px-4 py-2 bg-amber-100 text-amber-800 rounded-lg text-sm font-medium hover:bg-amber-200 transition-colors">
                        <i class="fas fa-info-circle mr-2"></i> View return details
                      </a>
                    </div>
                  <% } %>
                </div>
              </div>
            </div>
          <% } %>

          <!-- Order Status Progress Tracker -->
          <%
            // Define the four status steps
            const steps = ['Ordered', 'Processing', 'Shipped', 'Delivered'];
            let currentStep;
            
            // Determine current step based on order.order_status (case-insensitive)
            switch(order.order_status.toLowerCase()) {
              case 'ordered':
                currentStep = 1;
                break;
              case 'processing':
                currentStep = 2;
                break;
              case 'shipped':
                currentStep = 3;
                break;
              case 'delivered':
                currentStep = 4;
                break;
              default:
                currentStep = 1;
            }
            
            // Calculate progress width: 0% for step1, 33.33% for step2, 66.67% for step3, 100% for step4
            const progressWidth = ((currentStep - 1) / (steps.length - 1)) * 100;
          %>
          
          <div class="bg-white rounded-xl shadow-soft p-6 mb-6 border border-gray-100">
            <% if(order.order_status !== 'cancelled') { %>
              <h2 class="text-xl font-semibold mb-8 text-gray-900 flex items-center">
                <i class="fas fa-shipping-fast mr-3 text-primary-600"></i> Order Status
              </h2>
              
              <!-- Progress Tracker -->
              <div class="relative mb-16">
                <!-- Progress Bar -->
                <div class="progress-track mb-8">
                  <div class="progress-bar" style="width: <%= progressWidth %>%;"></div>
                </div>
                
                <!-- Status Steps -->
                <div class="flex justify-between">
                  <% steps.forEach((step, index) => { 
                    const isCompleted = index + 1 < currentStep;
                    const isActive = index + 1 === currentStep;
                    const isPending = index + 1 > currentStep;
                  %>
                    <div class="progress-step <%= isCompleted ? 'completed' : isActive ? 'active' : '' %> flex flex-col items-center">
                      <div class="w-12 h-12 rounded-full flex items-center justify-center mb-3 <%= isCompleted ? 'bg-primary-600 text-white' : isActive ? 'bg-primary-500 text-white' : 'bg-gray-200 text-gray-500' %> shadow-md">
                        <% if(isCompleted) { %>
                          <i class="fas fa-check"></i>
                        <% } else { %>
                          <span class="text-sm font-semibold"><%= index + 1 %></span>
                        <% } %>
                      </div>
                      <span class="text-sm font-medium <%= isCompleted || isActive ? 'text-primary-700' : 'text-gray-500' %>">
                        <%= step %>
                      </span>
                      <% if(index === 0) { %>
                        <span class="text-xs text-gray-500 mt-1">
                          <%= new Date(order.timestamp).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>
                        </span>
                      <% } else if(index === 1) { %>
                        <span class="text-xs <%= isCompleted || isActive ? 'text-primary-600' : 'text-gray-400' %> mt-1">
                          Mar 2, 2025
                        </span>
                      <% } else if(index === 2) { %>
                        <span class="text-xs <%= isCompleted || isActive ? 'text-primary-600' : 'text-gray-400' %> mt-1">
                          Mar 3, 2025
                        </span>
                      <% } else if(index === 3) { %>
                        <span class="text-xs <%= isCompleted || isActive ? 'text-primary-600' : 'text-gray-400' %> mt-1">
                          Est. Mar 5, 2025
                        </span>
                      <% } %>
                    </div>
                  <% }); %>
                </div>
              </div>
              
              <!-- Status Details -->
              <div class="bg-primary-50 rounded-lg p-4 border border-primary-100">
                <div class="flex items-start">
                  <div class="flex-shrink-0 w-10 h-10 rounded-full bg-primary-100 flex items-center justify-center mr-4">
                    <% if(currentStep === 1) { %>
                      <i class="fas fa-clipboard-check text-primary-600"></i>
                    <% } else if(currentStep === 2) { %>
                      <i class="fas fa-box-open text-primary-600"></i>
                    <% } else if(currentStep === 3) { %>
                      <i class="fas fa-truck text-primary-600"></i>
                    <% } else if(currentStep === 4) { %>
                      <i class="fas fa-home text-primary-600"></i>
                    <% } %>
                  </div>
                  <div>
                    <h3 class="text-base font-semibold text-primary-800">
                      <% if(currentStep === 1) { %>
                        Order Received
                      <% } else if(currentStep === 2) { %>
                        Order is Being Processed
                      <% } else if(currentStep === 3) { %>
                        Order is On the Way
                      <% } else if(currentStep === 4) { %>
                        Order Delivered
                      <% } %>
                    </h3>
                    <p class="text-sm text-primary-700 mt-1">
                      <% if(currentStep === 1) { %>
                        We've received your order and are preparing it for processing.
                      <% } else if(currentStep === 2) { %>
                        Your order is being prepared and packed for shipping.
                      <% } else if(currentStep === 3) { %>
                        Your order has been shipped and is on its way to you.
                      <% } else if(currentStep === 4) { %>
                        Your order has been delivered. Enjoy your purchase!
                      <% } %>
                    </p>
                    
                    <% if(currentStep === 3) { %>
                      <div class="mt-3">
                        <a href="#" class="inline-flex items-center text-sm text-primary-700 hover:text-primary-800 font-medium">
                          <i class="fas fa-map-marker-alt mr-2"></i> Track your package
                        </a>
                      </div>
                    <% } %>
                  </div>
                </div>
              </div>
            <% } else { %>
              <!-- Order Cancelled Message -->
              <div class="flex flex-col items-center justify-center py-10">
                <div class="w-20 h-20 rounded-full bg-red-100 flex items-center justify-center mb-6">
                  <i class="fas fa-times text-red-600 text-3xl"></i>
                </div>
                <h3 class="text-2xl font-bold text-red-600 mb-2">Order Cancelled</h3>
                <p class="text-gray-600 max-w-md text-center">
                  Your order has been cancelled. If you have any questions or need further assistance, please contact our support team.
                </p>
                <div class="mt-6 flex gap-4">
                  <a href="/profile/orders" class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors text-sm font-medium">
                    <i class="fas fa-arrow-left mr-2"></i> Back to Orders
                  </a>
                  <a href="/contact" class="inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors text-sm font-medium">
                    <i class="fas fa-headset mr-2"></i> Contact Support
                  </a>
                </div>
              </div>
            <% } %>
          </div>

          <% if(order.order_status.toLowerCase() === 'shipped') { %>
            <!-- Shipment Tracking Information -->
            <div class="bg-blue-50 rounded-xl p-6 border border-blue-100 mb-6 shadow-soft animate-fade-in">
              <div class="flex items-start">
                <div class="flex-shrink-0 w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center mr-4">
                  <i class="fas fa-truck text-blue-600 text-xl"></i>
                </div>
                <div>
                  <h3 class="text-base font-semibold text-blue-800">Your order is on its way</h3>
                  <p class="text-sm text-blue-700 mt-1">Package left our warehouse on Mar 3, 2025</p>
                  <div class="mt-3">
                    <a href="#" class="inline-flex items-center text-sm text-blue-700 hover:text-blue-800 font-medium">
                      <i class="fas fa-map-marker-alt mr-2"></i> Track your package
                      <i class="fas fa-chevron-right ml-2 text-xs"></i>
                    </a>
                  </div>
                </div>
              </div>
              <div class="mt-4 pt-4 border-t border-blue-200">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div class="bg-white bg-opacity-50 rounded-lg p-3">
                    <p class="text-xs text-blue-600 font-medium">Carrier</p>
                    <p class="text-sm text-blue-800 font-semibold">FedEx Express</p>
                  </div>
                  <div class="bg-white bg-opacity-50 rounded-lg p-3">
                    <p class="text-xs text-blue-600 font-medium">Tracking Number</p>
                    <p class="text-sm text-blue-800 font-semibold">FX123456789012</p>
                  </div>
                  <div class="bg-white bg-opacity-50 rounded-lg p-3">
                    <p class="text-xs text-blue-600 font-medium">Estimated Delivery</p>
                    <p class="text-sm text-blue-800 font-semibold">Mar 5, 2025</p>
                  </div>
                </div>
              </div>
            </div>
          <% } %>

          <!-- Product Review Form (Only shown if order status is delivered) -->
          <% if(order.order_status.toLowerCase() === 'delivered') { %>
            <div class="bg-white rounded-xl shadow-soft p-6 mb-6 border border-gray-100">
              <h2 class="text-xl font-semibold mb-4 text-gray-900 flex items-center">
                <i class="fas fa-star mr-3 text-yellow-500"></i> Rate Your Purchase
              </h2>
              <p class="text-sm text-gray-600 mb-6">We'd love to hear your thoughts on the products you received. Your feedback helps us improve!</p>

              <form id="reviewForm" class="space-y-8">
                <input type="hidden" name="orderId" value="<%= order.order_id %>">

                <% order.items.forEach(function(item, index) { %>
                  <div class="<%= index !== 0 ? 'pt-8 border-t border-gray-200' : '' %>">
                    <div class="flex flex-col md:flex-row gap-6 mb-6">
                      <div class="w-full md:w-24 h-24 bg-gray-50 rounded-lg overflow-hidden border border-gray-200 flex-shrink-0">
                        <img class="w-full h-full object-contain" src="/<%= item.product.images[0] %>" alt="<%= item.product.product_name %>" />
                      </div>
                      <div class="flex-1">
                        <h3 class="text-lg font-semibold text-gray-900">
                          <%= item.product.product_name %>
                        </h3>
                        <input type="hidden" name="productId_<%= index %>" value="<%= item.product.id %>">
                        <% if(item.product.description) { %>
                          <p class="text-sm text-gray-600 mt-1 line-clamp-2">
                            <%= item.product.description %>
                          </p>
                        <% } %>
                      </div>
                    </div>

                    <div class="space-y-5 bg-gray-50 p-5 rounded-lg">
                      <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Your Rating</label>
                        <div class="flex items-center gap-2">
                          <div class="rating-stars flex" data-product-index="<%= index %>">
                            <button type="button" class="star-btn text-gray-300 hover:text-yellow-400 text-2xl" data-rating="1">★</button>
                            <button type="button" class="star-btn text-gray-300 hover:text-yellow-400 text-2xl" data-rating="2">★</button>
                            <button type="button" class="star-btn text-gray-300 hover:text-yellow-400 text-2xl" data-rating="3">★</button>
                            <button type="button" class="star-btn text-gray-300 hover:text-yellow-400 text-2xl" data-rating="4">★</button>
                            <button type="button" class="star-btn text-gray-300 hover:text-yellow-400 text-2xl" data-rating="5">★</button>
                          </div>
                          <span class="text-sm text-gray-500 ml-2 rating-text">Select a rating</span>
                          <input type="hidden" name="rating_<%= index %>" class="rating-input" value="">
                        </div>
                      </div>

                      <div>
                        <label for="review_<%= index %>" class="block text-sm font-medium text-gray-700 mb-2">Your Review</label>
                        <textarea id="review_<%= index %>" name="review_<%= index %>" rows="3" class="w-full p-3 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500" placeholder="Share your experience with this product..."></textarea>
                      </div>

                      <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Would you recommend this product?</label>
                        <div class="flex items-center gap-4">
                          <label class="inline-flex items-center">
                            <input type="radio" name="recommend_<%= index %>" value="yes" class="w-4 h-4 text-primary-600 border-gray-300 focus:ring-primary-500">
                            <span class="ml-2 text-sm text-gray-700">Yes</span>
                          </label>
                          <label class="inline-flex items-center">
                            <input type="radio" name="recommend_<%= index %>" value="no" class="w-4 h-4 text-primary-600 border-gray-300 focus:ring-primary-500">
                            <span class="ml-2 text-sm text-gray-700">No</span>
                          </label>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>

                <div class="flex justify-end">
                  <button type="submit" class="px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-lg transition-colors shadow-sm flex items-center">
                    <i class="fas fa-paper-plane mr-2"></i> Submit Reviews
                  </button>
                </div>
              </form>
            </div>
          <% } %>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Order Items -->
            <div class="lg:col-span-2 bg-white rounded-xl shadow-soft p-6 border border-gray-100">
              <h2 class="text-xl font-semibold mb-6 text-gray-900 flex items-center">
                <i class="fas fa-box-open mr-3 text-primary-600"></i> Order Items
              </h2>
              
              <div class="space-y-6">
                <% order.items.forEach(function(item, index) { %>
                  <div class="<%= index !== order.items.length - 1 ? 'pb-6 border-b border-gray-200' : '' %>">
                    <div class="flex flex-col sm:flex-row gap-4">
                      <div class="w-full sm:w-24 h-24 bg-gray-50 rounded-lg overflow-hidden border border-gray-200 flex-shrink-0">
                        <img class="w-full h-full object-contain" src="/<%= item.product.images[0] %>" alt="<%= item.product.product_name %>" />
                      </div>
                      <div class="flex-1">
                        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2">
                          <h3 class="text-base font-semibold text-gray-900 hover:text-primary-700 transition-colors">
                            <a href="/product-details/<%= item.product._id %>">
                              <%= item.product.product_name %>
                            </a>
                          </h3>
                          <div class="text-right">
                            <span class="text-sm font-medium text-gray-900">
                              ₹<%= (item.price * item.quantity).toFixed(2) %>
                            </span>
                          </div>
                        </div>
                        
                        <% if(item.product.description) { %>
                          <p class="text-sm text-gray-600 mt-1 line-clamp-2">
                            <%= item.product.description %>
                          </p>
                        <% } %>
                        
                        <div class="flex flex-wrap gap-4 mt-3">
                          <div class="flex items-center">
                            <span class="text-xs text-gray-500 mr-2">Price:</span>
                            <span class="text-sm font-medium text-gray-800">
                              ₹<%= item.price.toFixed(2) %>
                              <% if(item.discounted_price && item.discounted_price < item.price) { %>
                                <span class="text-red-500 line-through ml-1 text-xs">₹<%= item.price.toFixed(2) %></span>
                              <% } %>
                            </span>
                          </div>
                          <div class="flex items-center">
                            <span class="text-xs text-gray-500 mr-2">Quantity:</span>
                            <span class="text-sm font-medium text-gray-800">
                              <%= item.quantity %>
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>

            <!-- Order Summary -->
            <div class="lg:col-span-1">
              <div class="bg-white rounded-xl shadow-soft p-6 border border-gray-100 sticky top-24">
                <h2 class="text-xl font-semibold mb-6 text-gray-900 flex items-center">
                  <i class="fas fa-receipt mr-3 text-primary-600"></i> Order Summary
                </h2>
                
                <div class="space-y-4">
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600">Subtotal</span>
                    <span class="text-gray-900 font-medium">₹<%= order.subtotal.toFixed(2) %></span>
                  </div>
                  
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600">Discount</span>
                    <span class="text-green-600 font-medium">-₹<%= order.discount.toFixed(2) %></span>
                  </div>
                  
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600">Shipping</span>
                    <span class="text-gray-900 font-medium">₹<%= order.shipping.toFixed(2) %></span>
                  </div>
                  
                  <div class="flex justify-between items-center">
                    <span class="text-gray-600">Tax</span>
                    <span class="text-gray-900 font-medium">₹<%= order.tax.toFixed(2) %></span>
                  </div>
                  
                  <div class="pt-4 border-t border-gray-200">
                    <div class="flex justify-between items-center">
                      <span class="text-lg font-semibold text-gray-900">Total</span>
                      <span class="text-lg font-bold text-primary-700">₹<%= order.total.toFixed(2) %></span>
                    </div>
                  </div>
                </div>
                
                <div class="mt-6 space-y-4">
                  <div class="bg-gray-50 p-4 rounded-lg border border-gray-100">
                    <h3 class="text-sm font-medium text-gray-800 mb-2 flex items-center">
                      <i class="fas fa-credit-card text-primary-500 mr-2"></i> Payment Method
                    </h3>
                    <p class="text-sm text-gray-700">
                      <% if(order.payment_method === 'cod') { %>
                        Cash on Delivery
                      <% } else if(order.payment_method === 'card') { %>
                        Credit/Debit Card
                      <% } else if(order.payment_method === 'upi') { %>
                        UPI Payment
                      <% } else { %>
                        <%= order.payment_method %>
                      <% } %>
                    </p>
                  </div>
                  
                  <div class="bg-gray-50 p-4 rounded-lg border border-gray-100">
                    <h3 class="text-sm font-medium text-gray-800 mb-2 flex items-center">
                      <i class="fas fa-map-marker-alt text-primary-500 mr-2"></i> Shipping Address
                    </h3>
                    <p class="text-sm text-gray-700"><%= order.address.full_name %></p>
                    <p class="text-sm text-gray-700"><%= order.address.address %></p>
                    <p class="text-sm text-gray-700"><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                    <p class="text-sm text-gray-700"><%= order.address.mobile %></p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Need Help Section -->
          <div class="bg-white rounded-xl shadow-soft p-6 mt-6 border border-gray-100">
            <h2 class="text-xl font-semibold mb-6 text-gray-900 flex items-center">
              <i class="fas fa-headset mr-3 text-primary-600"></i> Need Help?
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <a href="#" class="group flex items-center p-4 bg-gray-50 rounded-lg hover:bg-primary-50 transition-colors border border-gray-100 hover:border-primary-100">
                <div class="w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center mr-4 group-hover:bg-blue-200 transition-colors">
                  <i class="fas fa-comments text-blue-600 text-xl"></i>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900 group-hover:text-primary-700 transition-colors">Live Chat</p>
                  <p class="text-xs text-gray-500">Talk to our support team</p>
                </div>
              </a>
              <a href="#" class="group flex items-center p-4 bg-gray-50 rounded-lg hover:bg-primary-50 transition-colors border border-gray-100 hover:border-primary-100">
                <div class="w-12 h-12 rounded-full bg-green-100 flex items-center justify-center mr-4 group-hover:bg-green-200 transition-colors">
                  <i class="fas fa-phone-alt text-green-600 text-xl"></i>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900 group-hover:text-primary-700 transition-colors">Call Us</p>
                  <p class="text-xs text-gray-500">Mon-Fri, 9am-6pm</p>
                </div>
              </a>
              <a href="#" class="group flex items-center p-4 bg-gray-50 rounded-lg hover:bg-primary-50 transition-colors border border-gray-100 hover:border-primary-100">
                <div class="w-12 h-12 rounded-full bg-purple-100 flex items-center justify-center mr-4 group-hover:bg-purple-200 transition-colors">
                  <i class="fas fa-envelope text-purple-600 text-xl"></i>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900 group-hover:text-primary-700 transition-colors">Email</p>
                  <p class="text-xs text-gray-500">support@guitman.com</p>
                </div>
              </a>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <!-- Return Order Modal -->
  <div id="returnOrderModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-xl shadow-xl max-w-md w-full mx-4 overflow-hidden animate-fade-in">
      <div class="bg-gradient-to-r from-primary-600 to-primary-700 px-6 py-4 text-white">
        <div class="flex justify-between items-center">
          <h3 class="text-lg font-semibold">Return Order</h3>
          <button id="closeReturnModal" class="text-white hover:text-gray-200 transition-colors">
            <i class="fas fa-times"></i>
          </button>
        </div>
      </div>
      <div class="px-6 py-6">
        <div class="mb-6">
          <p class="text-gray-700 mb-4">Are you sure you want to return Order #<span class="font-semibold text-primary-600"><%= order.order_id %></span>?</p>
          <p class="text-sm text-gray-600 mb-3">Please select a reason for return:</p>
          <select class="w-full p-3 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500" id="returnReason">
            <option value="">Select a reason</option>
            <option value="damaged">Received damaged item</option>
            <option value="wrong">Received wrong item</option>
            <option value="defective">Item is defective</option>
            <option value="not_as_described">Item not as described</option>
            <option value="other">Other reason</option>
          </select>
        </div>
        <div class="mb-6">
          <label for="returnComments" class="block text-sm text-gray-600 mb-2">Additional comments (optional):</label>
          <textarea id="returnComments" rows="3" class="w-full p-3 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500" placeholder="Please provide more details about your return request..."></textarea>
        </div>
        <div class="bg-amber-50 p-4 rounded-lg border border-amber-100 text-sm text-amber-800 mb-4">
          <i class="fas fa-exclamation-triangle mr-2 text-amber-600"></i>
          Once submitted, our team will review your return request within 24 hours and send further instructions.
        </div>
      </div>
      <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3">
        <button id="cancelReturnBtn" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors text-sm font-medium">
          Cancel
        </button>
        <button id="confirmReturnBtn" class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed" disabled>
          Confirm Return
        </button>
      </div>
    </div>
  </div>

  <!-- Cancel Order Modal -->
  <div id="cancelOrderModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-xl shadow-xl max-w-md w-full mx-4 overflow-hidden animate-fade-in">
      <div class="bg-gradient-to-r from-red-600 to-red-700 px-6 py-4 text-white">
        <div class="flex justify-between items-center">
          <h3 class="text-lg font-semibold">Cancel Order</h3>
          <button id="closeCancelModal" class="text-white hover:text-gray-200 transition-colors">
            <i class="fas fa-times"></i>
          </button>
        </div>
      </div>
      <div class="px-6 py-6">
        <div class="mb-6">
          <p class="text-gray-700 mb-4">Are you sure you want to cancel Order #<span class="font-semibold text-primary-600"><%= order.order_id %></span>?</p>
          <p class="text-sm text-gray-600 mb-3">Please select a reason for cancellation:</p>
          <select class="w-full p-3 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500" id="cancelReason">
            <option value="">Select a reason</option>
            <option value="mistake">Ordered by mistake</option>
            <option value="changed_mind">Changed my mind</option>
            <option value="found_better_price">Found better price elsewhere</option>
            <option value="delivery_time">Delivery time too long</option>
            <option value="other">Other reason</option>
          </select>
        </div>
        <div class="mb-6">
          <label for="cancelComments" class="block text-sm text-gray-600 mb-2">Additional comments (optional):</label>
          <textarea id="cancelComments" rows="3" class="w-full p-3 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500" placeholder="Please provide more details about your cancellation..."></textarea>
        </div>
        <div class="bg-blue-50 p-4 rounded-lg border border-blue-100 text-sm text-blue-800 mb-4">
          <i class="fas fa-info-circle mr-2 text-blue-600"></i>
          Your payment will be refunded to your original payment method within 5-7 business days.
        </div>
      </div>
      <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3">
        <button id="backCancelBtn" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors text-sm font-medium">
          Go Back
        </button>
        <button id="confirmCancelBtn" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed" disabled>
          Confirm Cancellation
        </button>
      </div>
    </div>
  </div>

  <!-- Invoice Template (Hidden by default, used for download) -->
  <div id="invoice-content" class="hidden">
    <div class="p-8 max-w-4xl mx-auto bg-white">
      <div class="flex justify-between items-start mb-8">
        <div>
          <h1 class="text-2xl font-bold text-gray-900">INVOICE</h1>
          <p class="text-gray-600 mt-1">Order #<%= order.order_id %></p>
          <p class="text-gray-600 mt-1">Date: <%= new Date(order.timestamp).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
        </div>
        <div class="text-right">
          <h2 class="text-xl font-bold text-gray-900">Guitman</h2>
          <p class="text-gray-600">123 Music Street</p>
          <p class="text-gray-600">Mumbai, Maharashtra 400001</p>
          <p class="text-gray-600">GSTIN: 27AABCG1234A1Z5</p>
        </div>
      </div>
      
      <div class="grid grid-cols-2 gap-8 mb-8">
        <div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Bill To:</h3>
          <p class="text-gray-800"><%= order.user.name %></p>
          <p class="text-gray-800"><%= order.address.address %></p>
          <p class="text-gray-800"><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
          <p class="text-gray-800"><%= order.address.mobile %></p>
        </div>
        <div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Payment Information:</h3>
          <p class="text-gray-800">Payment Method: <%= order.payment_method === 'cod' ? 'Cash on Delivery' : order.payment_method %></p>
          <p class="text-gray-800">Payment Status: <%= order.payment_status.charAt(0).toUpperCase() + order.payment_status.slice(1) %></p>
          <% if(order.payment_status === 'paid' && order.payment_id) { %>
            <p class="text-gray-800">Transaction ID: <%= order.payment_id %></p>
          <% } %>
        </div>
      </div>
      
      <table class="w-full mb-8">
        <thead>
          <tr class="border-b-2 border-gray-300">
            <th class="py-2 text-left text-gray-900">Item</th>
            <th class="py-2 text-right text-gray-900">Price</th>
            <th class="py-2 text-right text-gray-900">Quantity</th>
            <th class="py-2 text-right text-gray-900">Total</th>
          </tr>
        </thead>
        <tbody>
          <% order.items.forEach(function(item) { %>
            <tr class="border-b border-gray-200">
              <td class="py-3 text-gray-800"><%= item.product.product_name %></td>
              <td class="py-3 text-right text-gray-800">₹<%= item.price.toFixed(2) %></td>
              <td class="py-3 text-right text-gray-800"><%= item.quantity %></td>
              <td class="py-3 text-right text-gray-800">₹<%= (item.price * item.quantity).toFixed(2) %></td>
            </tr>
          <% }); %>
        </tbody>
      </table>
      
      <div class="flex justify-end mb-8">
        <div class="w-64">
          <div class="flex justify-between py-2">
            <span class="text-gray-700">Subtotal:</span>
            <span class="text-gray-800">₹<%= order.subtotal.toFixed(2) %></span>
          </div>
          <div class="flex justify-between py-2">
            <span class="text-gray-700">Discount:</span>
            <span class="text-gray-800">-₹<%= order.discount.toFixed(2) %></span>
          </div>
          <div class="flex justify-between py-2">
            <span class="text-gray-700">Shipping:</span>
            <span class="text-gray-800">₹<%= order.shipping.toFixed(2) %></span>
          </div>
          <div class="flex justify-between py-2">
            <span class="text-gray-700">Tax:</span>
            <span class="text-gray-800">₹<%= order.tax.toFixed(2) %></span>
          </div>
          <div class="flex justify-between py-2 border-t border-gray-300 font-bold">
            <span class="text-gray-900">Total:</span>
            <span class="text-gray-900">₹<%= order.total.toFixed(2) %></span>
          </div>
        </div>
      </div>
      
      <div class="border-t border-gray-300 pt-6 text-center">
        <p class="text-gray-600 text-sm">Thank you for your purchase!</p>
        <p class="text-gray-600 text-sm mt-1">For any questions, please contact us at support@guitman.com</p>
      </div>
    </div>
  </div>

  <%- include('./partials/footer') %>

  <!-- Include Razorpay Checkout script -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Toast notification functionality
      function showToast(message, type = 'success') {
        const toastContainer = document.getElementById('toast-container');
        if (!toastContainer) return;
        
        // Create toast element
        const toast = document.createElement('div');
        toast.className = `toast mb-3 p-4 rounded-lg shadow-lg flex items-center ${
          type === 'success' 
            ? 'bg-green-50 border-l-4 border-green-500 text-green-800' 
            : type === 'error'
              ? 'bg-red-50 border-l-4 border-red-500 text-red-800'
              : 'bg-blue-50 border-l-4 border-blue-500 text-blue-800'
        }`;
        
        // Create toast content
        toast.innerHTML = `
          <div class="flex-shrink-0 mr-3">
            <i class="fas ${
              type === 'success' 
                ? 'fa-check-circle text-green-500' 
                : type === 'error'
                  ? 'fa-exclamation-circle text-red-500'
                  : 'fa-info-circle text-blue-500'
            } text-lg"></i>
          </div>
          <div class="flex-1">
            <p class="font-medium">${message}</p>
          </div>
          <button class="ml-auto text-gray-400 hover:text-gray-600 transition-colors">
            <i class="fas fa-times"></i>
          </button>
        `;
        
        // Add click event to close button
        const closeBtn = toast.querySelector('button');
        closeBtn.addEventListener('click', () => {
          toast.classList.remove('show');
          setTimeout(() => toast.remove(), 300);
        });
        
        // Add toast to container
        toastContainer.appendChild(toast);
        
        // Trigger animation after a small delay
        setTimeout(() => toast.classList.add('show'), 10);
        
        // Auto remove after 5 seconds
        setTimeout(() => {
          toast.classList.remove('show');
          setTimeout(() => toast.remove(), 300);
        }, 5000);
      }

      // Modal functionality
      // Return Order Modal elements
      const returnOrderBtn = document.getElementById('returnOrderBtn');
      const returnOrderModal = document.getElementById('returnOrderModal');
      const closeReturnModal = document.getElementById('closeReturnModal');
      const cancelReturnBtn = document.getElementById('cancelReturnBtn');
      const confirmReturnBtn = document.getElementById('confirmReturnBtn');
      const returnReason = document.getElementById('returnReason');
      const returnComments = document.getElementById('returnComments');

      // Cancel Order Modal elements
      const cancelOrderBtn = document.getElementById('cancelOrderBtn');
      const cancelOrderModal = document.getElementById('cancelOrderModal');
      const closeCancelModal = document.getElementById('closeCancelModal');
      const backCancelBtn = document.getElementById('backCancelBtn');
      const confirmCancelBtn = document.getElementById('confirmCancelBtn');
      const cancelReason = document.getElementById('cancelReason');
      const cancelComments = document.getElementById('cancelComments');

      // Star rating functionality
      const starButtons = document.querySelectorAll('.star-btn');
      if (starButtons.length > 0) {
        starButtons.forEach(btn => {
          btn.addEventListener('click', function() {
            const rating = this.getAttribute('data-rating');
            const productIndex = this.closest('.rating-stars').getAttribute('data-product-index');
            const ratingInput = document.querySelector(`input[name="rating_${productIndex}"]`);
            const ratingText = this.closest('.rating-stars').nextElementSibling;
            const stars = this.closest('.rating-stars').querySelectorAll('.star-btn');

            // Update hidden input value
            ratingInput.value = rating;

            // Update rating text
            ratingText.textContent = `${rating} star${rating > 1 ? 's' : ''}`;

            // Update star colors
            stars.forEach(star => {
              const starRating = parseInt(star.getAttribute('data-rating'));
              if (starRating <= rating) {
                star.classList.remove('text-gray-300');
                star.classList.add('text-yellow-400');
              } else {
                star.classList.remove('text-yellow-400');
                star.classList.add('text-gray-300');
              }
            });
          });
        });
      }

      // Review form submission
      const reviewForm = document.getElementById('reviewForm');
      if (reviewForm) {
        reviewForm.addEventListener('submit', async function(e) {
          e.preventDefault();

          // Collect form data
          const formData = new FormData(reviewForm);
          const reviewData = {};

          // Convert FormData to JSON
          for (let [key, value] of formData.entries()) {
            reviewData[key] = value;
          }

          try {
            const response = await fetch('/profile/submit-review', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(reviewData)
            });

            if (!response.ok) {
              throw new Error('Failed to submit reviews');
            }

            showToast('Thank you for your reviews! Your feedback helps us improve.', 'success');

            // Disable form after submission
            const inputs = reviewForm.querySelectorAll('input, textarea, button');
            inputs.forEach(input => {
              input.disabled = true;
            });

            // Change submit button text
            const submitBtn = reviewForm.querySelector('button[type="submit"]');
            submitBtn.textContent = 'Reviews Submitted';
            submitBtn.classList.add('bg-gray-500');
            submitBtn.classList.remove('bg-primary-600', 'hover:bg-primary-700');

          } catch (error) {
            showToast(error.message, 'error');
          }
        });
      }

      // Return Order Modal Functions
      if (returnOrderBtn) {
        returnOrderBtn.addEventListener('click', function() {
          returnOrderModal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        });

        closeReturnModal.addEventListener('click', function() {
          returnOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        });

        cancelReturnBtn.addEventListener('click', function() {
          returnOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        });

        returnReason.addEventListener('change', function() {
          confirmReturnBtn.disabled = !this.value;
        });

        confirmReturnBtn.addEventListener('click', async function() {
          if (returnReason.value) {
            // Build payload for return request
            const payload = {
              reason: returnReason.value,
              comments: returnComments ? returnComments.value.trim() : ''
            };
            try {
              const response = await fetch(`/cart/return/<%= order.order_id %>`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
              });
              if (!response.ok) {
                throw new Error('Failed to submit return request');
              }
              const data = await response.json();
              showToast('Return request submitted successfully! Our team will contact you shortly.', 'success');
              returnOrderModal.classList.add('hidden');
              document.body.style.overflow = 'auto';
              
              // Reload page after short delay to show updated status
              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } catch (error) {
              showToast(error.message, 'error');
            }
          }
        });
      }

      // Cancel Order Modal Functions
      if (cancelOrderBtn) {
        cancelOrderBtn.addEventListener('click', function() {
          cancelOrderModal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        });

        closeCancelModal.addEventListener('click', function() {
          cancelOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        });

        backCancelBtn.addEventListener('click', function() {
          cancelOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        });

        cancelReason.addEventListener('change', function() {
          confirmCancelBtn.disabled = !this.value;
        });

        confirmCancelBtn.addEventListener('click', async function() {
          if (cancelReason.value) {
            // Build payload for cancellation request
            const payload = {
              reason: cancelReason.value,
              comments: cancelComments ? cancelComments.value.trim() : ''
            };
            try {
              const response = await fetch(`/cart/cancel/<%= order.order_id %>`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
              });
              if (!response.ok) {
                throw new Error('Failed to cancel order');
              }
              const data = await response.json();
              showToast('Order cancelled successfully! Your refund has been initiated.', 'success');
              setTimeout(() => {
                window.location.href = '/profile/orders';
              }, 1500); // Short delay before redirect to show the alert
            } catch (error) {
              showToast(error.message, 'error');
            }
          }
        });
      }

      // Close modals when clicking outside
      window.addEventListener('click', function(event) {
        if (event.target === returnOrderModal) {
          returnOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        }
        if (event.target === cancelOrderModal) {
          cancelOrderModal.classList.add('hidden');
          document.body.style.overflow = 'auto';
        }
      });
      
      // Download Invoice functionality
      const downloadInvoiceBtn = document.getElementById('downloadInvoiceBtn');
      if (downloadInvoiceBtn) {
        downloadInvoiceBtn.addEventListener('click', function() {
          const invoiceContent = document.getElementById('invoice-content');
          const options = {
            margin: 10,
            filename: 'invoice-<%= order.order_id %>.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
          };
          
          // Show loading state
          downloadInvoiceBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Generating...';
          downloadInvoiceBtn.disabled = true;
          
          // Generate PDF
          html2pdf().from(invoiceContent).set(options).save().then(() => {
            // Reset button state
            downloadInvoiceBtn.innerHTML = '<i class="fas fa-file-invoice mr-2"></i> Download Invoice';
            downloadInvoiceBtn.disabled = false;
            
            // Show success message
            showToast('Invoice downloaded successfully!', 'success');
          }).catch(error => {
            // Reset button state
            downloadInvoiceBtn.innerHTML = '<i class="fas fa-file-invoice mr-2"></i> Download Invoice';
            downloadInvoiceBtn.disabled = false;
            
            // Show error message
            showToast('Failed to download invoice. Please try again.', 'error');
            console.error('Error generating PDF:', error);
          });
        });
      }
      
      // Retry Payment functionality
      const retryPaymentBtn = document.getElementById('retryPaymentBtn');
      if (retryPaymentBtn) {
        retryPaymentBtn.addEventListener('click', async function() {
          try {
            // Update the existing order with a new Razorpay order ID
            const updateRes = await fetch('/cart/update-order-for-retry/<%= order.order_id %>', {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' }
            });
            const updateData = await updateRes.json();
            if (!updateData.success) {
              throw new Error(updateData.message || 'Failed to update order for retry');
            }
            
            // Use the updated razorpay_order_id from your backend
            var options = {
              key: "rzp_test_8Dk8yuqXCyHL5B", // Replace with your Razorpay key
              amount: "<%= (order.total * 100).toFixed(0) %>", // Amount in paisa
              currency: "INR",
              name: "Guitman Store",
              description: "Payment for Order <%= order.order_id %>",
              order_id: updateData.razorpay_order_id, // Updated order ID from backend
              prefill: {
                name: "<%= order.user.name %>",
                email: "<%= order.user.email %>",
                contact: "<%= order.user.contact || '' %>"
              },
              theme: { color: "#7c3aed" },
              modal: {
                ondismiss: function() {
                  showToast("Payment cancelled. You can try again later.", "info");
                  // Optionally notify your backend of the cancellation
                  fetch('/cart/payment-failed', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                      order_id: "<%= order.order_id %>",
                      status: 'cancelled'
                    })
                  });
                }
              },
              handler: async function(paymentResponse) {
                try {
                  const verifyResponse = await fetch('/cart/verify-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                      razorpay_payment_id: paymentResponse.razorpay_payment_id,
                      razorpay_order_id: paymentResponse.razorpay_order_id,
                      razorpay_signature: paymentResponse.razorpay_signature,
                      order_id: "<%= order.order_id %>"
                    })
                  });
                  const verifyResult = await verifyResponse.json();
                  if (verifyResult.success) {
                    showToast("Payment successful! Your order is now being processed.", "success");
                    setTimeout(() => {
                      window.location.reload();
                    }, 1500);
                  } else {
                    throw new Error(verifyResult.message || 'Payment verification failed');
                  }
                } catch (err) {
                  showToast(err.message, "error");
                  // Optionally notify your backend about failed verification
                  fetch('/cart/payment-failed', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                      order_id: "<%= order.order_id %>",
                      status: 'failed',
                      error: err.message
                    })
                  });
                }
              }
            };
            var rzp = new Razorpay(options);
            rzp.open();
          } catch (error) {
            console.error("Error in retry payment flow:", error);
            showToast("Unable to initiate payment. Please try again later.", "error");
          }
        });
      }
    });
  </script>
</body>
</html>

