<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.product_name %> - Guitman</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        #lens {
            position: absolute;
            width: 150px;
            height: 150px;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: none;
            pointer-events: none;
            background-repeat: no-repeat;
            display: none;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
            z-index: 999;
        }
        #zoomed-image {
            position: absolute;
            width: 400px;
            height: 400px;
            border: 1px solid #ddd;
            background-repeat: no-repeat;
            display: none;
            z-index: 1000;
            background-color: white;
            background-size: 250% 250%;
            pointer-events: none;
        }
    </style>
</head>
<body class="bg-gray-50">
    <%- include('./partials/loading') %>
    <%- include('./partials/header') %>
    <%- include('./partials/breadcrumbs', { breadcrumbs }) %>

    <main class="max-w-7xl mx-auto px-6 py-12">
        <nav class="mb-8">
            <ol class="flex text-sm text-gray-600">
                <li class="hover:text-indigo-600 transition-colors duration-200">
                    <a href="/">Home</a>
                </li>
                <li class="mx-2">/</li>
                <li class="hover:text-indigo-600 transition-colors duration-200">
                    <a href="/shop">Shop</a>
                </li>
                <li class="mx-2">/</li>
                <li class="text-indigo-600 font-medium"><%= product.product_name %></li>
            </ol>
        </nav>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
            <!-- Product Images Column -->
            <div class="space-y-6">
                <div class="border rounded-lg overflow-hidden h-96 flex items-center justify-center bg-white relative" id="imageWrapper">
                    <img id="mainImage" 
                         src="/<%= product.images[0] %>" 
                         alt="<%= product.product_name %>" 
                         class="w-full h-full object-contain cursor-zoom-in">
                </div>
                <div class="grid grid-cols-4 gap-4">
                    <% product.images.forEach((image, index) => { %>
                        <button class="border rounded-lg overflow-hidden hover:border-indigo-500 transition-colors duration-200" 
                                onclick="document.getElementById('mainImage').src = '/<%= image %>'">
                            <img src="/<%= image %>" 
                                 alt="Thumbnail <%= index + 1 %>" 
                                 class="w-full object-cover h-24 cursor-pointer">
                        </button>
                    <% }) %>
                </div>
            </div>
    
            <!-- Product Details Column -->
            <div class="space-y-6">
                <h1 class="text-3xl font-bold text-gray-900"><%= product.product_name %></h1>
    
                <!-- Ratings -->
                <div class="flex items-center">
                    <% for(let i = 0; i < 5; i++) { %>
                        <svg class="w-5 h-5 <%= i < avgRating ? 'text-yellow-400' : 'text-gray-300' %>" 
                             fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                        </svg>
                    <% } %>
                    <span class="ml-2 text-gray-600">(<%= reviews.length %> reviews)</span>
                </div>
    
                <!-- Price & Offers -->
                <div class="text-3xl font-bold text-indigo-600">₹<%= product.price.toLocaleString() %></div>
                <% if(product.offer) { %>
                    <div class="text-green-600">
                        <span class="bg-green-100 px-3 py-1 rounded-full text-sm font-medium">Special Offer: <%= product.offer.name %></span>
                    </div>
                <% } %>
    
                <!-- Stock Info -->
                <div class="flex items-center justify-between bg-white p-4 rounded-lg border border-gray-200">
                    <span class="text-gray-600">Availability:</span>
                    <% if(product.stock < 10) { %>
                        <span class="text-red-600 font-medium">Only <%= product.stock %> left!</span>
                    <% } else { %>
                        <span class="text-green-600 font-medium">In Stock</span>
                    <% } %>
                </div>
    
                <!-- Product Description -->
                <div>
                    <h2 class="text-xl font-bold pb-4 border-b text-gray-800">Product Description</h2>
                    <div class="mt-4 space-y-4 text-gray-700">
                        <%= product.description %>
                    </div>
                </div>
    
                <!-- Add to Cart and Buy Now -->
                <div class="flex items-center gap-4">
                    <div class="flex items-center border rounded-md w-32">
                        <button class="px-4 py-2 border-r hover:bg-gray-50 transition-colors duration-200">-</button>
                        <input type="number" value="1" class="w-16 text-center focus:outline-none">
                        <button class="px-4 py-2 border-l hover:bg-gray-50 transition-colors duration-200">+</button>
                    </div>
                    <button class="flex items-center rounded-md bg-slate-800 py-3 px-6 border border-transparent text-center text-base text-white transition-all shadow-sm hover:shadow-lg focus:bg-slate-700 focus:shadow-none active:bg-slate-700 hover:bg-slate-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6 mr-2">
                            <path fill-rule="evenodd" d="M7.5 6v.75H5.513c-.96 0-1.764.724-1.865 1.679l-1.263 12A1.875 1.875 0 0 0 4.25 22.5h15.5a1.875 1.875 0 0 0 1.865-2.071l-1.263-12a1.875 1.875 0 0 0-1.865-1.679H16.5V6a4.5 4.5 0 1 0-9 0ZM12 3a3 3 0 0 0-3 3v.75h6V6a3 3 0 0 0-3-3Zm-3 8.25a3 3 0 1 0 6 0v-.75a.75.75 0 0 1 1.5 0v.75a4.5 4.5 0 1 1-9 0v-.75a.75.75 0 0 1 1.5 0v.75Z" clip-rule="evenodd"></path>
                        </svg>
                        Add To Cart
                    </button>
                    <button data-ripple-light="true" class="rounded-md bg-slate-800 py-3 px-6 border border-transparent text-center text-base text-white transition-all shadow-md hover:shadow-lg focus:bg-slate-700 focus:shadow-none active:bg-slate-700 hover:bg-slate-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2" type="button">
                        Buy Now
                    </button>
                    
                </div>
            </div>
        </div>
    
        <!-- Related Products -->
        <% if(relatedProducts.length > 0) { %>
            <div class="mt-16">
                <h2 class="text-2xl font-bold mb-8 text-gray-800">Related Products</h2>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <% relatedProducts.forEach(product => { %>
                        <a href="/product-details/<%=product._id%>" class="group">
                            <div class="bg-white p-6 rounded-xl shadow-sm group-hover:shadow-md transition-shadow duration-300 flex flex-col h-[27rem]">
                                <div class="relative flex-1 overflow-hidden">
                                    <img src="/<%= product.images[0] %>" 
                                         alt="<%= product.product_name %>" 
                                         class="w-full h-64 object-contain mb-4 rounded-lg transition-transform duration-300 group-hover:scale-105">
                                    <button class="absolute top-3 right-3 bg-white p-2 rounded-full shadow-sm hover:bg-gray-100 transition-colors duration-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-600 hover:text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                        </svg>
                                    </button>
                                </div>
                                <div class="mt-4">
                                    <h3 class="font-semibold text-lg mb-2 text-gray-800 truncate"><%= product.product_name %></h3>
                                    <div class="flex items-center justify-between mb-3">
                                        <span class="text-2xl font-bold text-indigo-600">₹<%= product.price.toLocaleString('en-IN') %></span>
                                        <button class="p-2 bg-indigo-100 rounded-full hover:bg-indigo-200 transition-colors duration-200">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </a>
                    <% }) %>
                </div>
            </div>
        <% } %>
    
        <!-- Reviews Section -->
        <div id="reviews" class="mt-16">
            <h2 class="text-2xl font-bold mb-8 text-gray-800">Customer Reviews</h2>
            <% if (reviews.length > 0) { %>
                <div class="space-y-6 mb-12">
                    <% reviews.forEach(review => { %>
                        <div class="bg-white p-6 rounded-lg shadow-sm">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center">
                                    <img src="<%= review.user.profile_image || '/ui/dprofile.jpg' %>" alt="User Avatar" class="w-10 h-10 rounded-full mr-4">
                                    <div>
                                        <h4 class="font-semibold text-gray-800"><%= reviews[0].user.first_name %></h4>
                                        <p class="text-sm text-gray-600"><%= new Date(review.createdAt).toLocaleDateString() %></p>
                                    </div>
                                </div>
                                <div class="flex">
                                    <% for(let i = 0; i < 5; i++) { %>
                                        <svg class="w-5 h-5 <%= i < review.rating ? 'text-yellow-400' : 'text-gray-300' %>" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                        </svg>
                                    <% } %>
                                </div>
                            </div>
                            <p class="text-gray-700"><%= review.feedback %></p>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <p class="text-gray-600 mb-8">No reviews yet. Be the first to review this product!</p>
            <% } %>
        
            <!-- New Review Form -->
            <div class="bg-white p-8 rounded-lg shadow-md">
                <h3 class="text-xl font-semibold mb-6 text-gray-800">Write a Review</h3>
                <form class="space-y-6" id="reviewForm" action="/submit-review" method="post">
    <input type="hidden" name="productId" value="<%= product._id %>">
    
    <div>
        <label for="rating" class="block text-sm font-medium text-gray-700 mb-2">Rating</label>
        <div class="flex items-center space-x-1">
            <% for(var i = 1; i <= 5; i++) { %>
                <button type="button" class="star-rating text-3xl text-gray-300 hover:text-yellow-400 focus:outline-none transition-colors duration-200" data-rating="<%= i %>">★</button>
            <% } %>
        </div>
        <input type="hidden" name="rating" id="rating" required>
    </div>

    <div>
        <label for="feedback" class="block text-sm font-medium text-gray-700 mb-2">Your Review</label>
        <textarea id="feedback" name="feedback" rows="4" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" placeholder="Share your thoughts about the product..." required></textarea>
    </div>

    <div>
        <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            Submit Review
        </button>
    </div>
</form>
            </div>
        </div>
        
        <script>
    const stars = document.querySelectorAll('.star-rating');
    const ratingInput = document.getElementById('rating');
    const reviewForm = document.getElementById('reviewForm');

    stars.forEach(star => {
        star.addEventListener('click', () => {
            const rating = star.dataset.rating;
            ratingInput.value = rating; // Set the hidden input value to the clicked star's rating

            // Update form action to include the rating value in the URL
            reviewForm.action = `/submit-review/${rating}`;

            stars.forEach((s, index) => {
                s.classList.toggle('text-yellow-400', index < rating); // Highlight stars up to selected rating
                s.classList.toggle('text-gray-300', index >= rating); // Dim stars after the selected rating
            });
        });
    });

        // document.querySelector('form').addEventListener('submit', async (event) => {
        //     event.preventDefault();

        //     if (!ratingInput.value) {
        //         alert("Please select a rating before submitting.");
        //         return;
        //     }

        //     const formData = new FormData(event.target);

        //     console.log("Submitting Review Data:", [...formData.entries()]); // Debugging log

        //     try {
        //         const response = await fetch('/submit-review', {
        //             method: 'POST',
        //             body: formData
        //         });

        //         if (response.ok) {
        //             alert('Review submitted successfully!');
        //             window.location.href = '/product/' + formData.get('productId');
        //         } else {
        //             const errorMessage = await response.text();
        //             alert('Error submitting review: ' + errorMessage);
        //         }
        //     } catch (error) {
        //         console.error("Review Submission Error:", error);
        //         alert('An error occurred. Please try again.');
        //     }
        // });

        </script>
        </div>
    </main>

    <%- include('./partials/footer') %>
    
    <script>
        // Initialize image zoom
        mediumZoom('#mainImage', {
            margin: 24,
            background: 'rgba(0, 0, 0, 0.8)'
        });

        // Custom zoom functionality
        document.addEventListener('DOMContentLoaded', function() {
            const mainImage = document.getElementById('mainImage');
            const imageWrapper = document.getElementById('imageWrapper');
            
            // Create lens and zoomed image elements
            const lens = document.createElement('div');
            lens.id = 'lens';
            imageWrapper.appendChild(lens);
            
            const zoomedImage = document.createElement('div');
            zoomedImage.id = 'zoomed-image';
            document.body.appendChild(zoomedImage);
            
            let ratio = 1;
            
            mainImage.addEventListener('load', function() {
                const naturalWidth = mainImage.naturalWidth;
                const displayedWidth = mainImage.clientWidth;
                ratio = naturalWidth / displayedWidth;
            });
            
            imageWrapper.addEventListener('mouseenter', function() {
                lens.style.display = 'block';
                zoomedImage.style.display = 'block';
                zoomedImage.style.backgroundImage = `url('${mainImage.src}')`;
            });
            
            imageWrapper.addEventListener('mousemove', function(e) {
                const rect = mainImage.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const lensSize = 150;
                let lensX = x - lensSize / 2;
                let lensY = y - lensSize / 2;
                
                lensX = Math.max(0, Math.min(lensX, rect.width - lensSize));
                lensY = Math.max(0, Math.min(lensY, rect.height - lensSize));
                
                lens.style.left = `${lensX}px`;
                lens.style.top = `${lensY}px`;
                
                const bgX = (x * ratio - lensSize / 2) * 2;
                const bgY = (y * ratio - lensSize / 2) * 2;
                zoomedImage.style.backgroundPosition = `-${bgX}px -${bgY}px`;
                
                zoomedImage.style.left = `${rect.right + 20}px`;
                zoomedImage.style.top = `${rect.top}px`;
            });
            
            imageWrapper.addEventListener('mouseleave', function() {
                lens.style.display = 'none';
                zoomedImage.style.display = 'none';
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
          const links = document.querySelectorAll("a");
          links.forEach(link => {
            link.addEventListener("click", function() {
              showLoader();
            });
          });
        });
      </script>
</body>
</html>